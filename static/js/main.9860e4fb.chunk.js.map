{"version":3,"sources":["images/cracker3.png","component/AppBar.js","component/Profile.js","component/CardData.js","component/CustomerDetails.js","component/CartData.js","component/Cart.js","component/CardGrid.js","component/Login.js","component/loading.js","component/SignUp.js","component/OrderConfirm.js","component/Admin.js","component/ForgotPassword.js","component/ResetPassword.js","component/OrderDetails.js","component/MyOrder.js","component/OrderData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","title","display","breakpoints","up","marginLeft","spacing","search","position","borderRadius","shape","backgroundColor","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","color","inputRoot","inputInput","paddingLeft","bookIcon","PrimarySearchAppBar","props","classes","useState","reload","setReload","anchorEl","setAnchorEl","open","Boolean","isLoggedIn","login","localStorage","getItem","undefined","handleClose","className","to","location","AppBar","style","background","Toolbar","onClick","Typography","variant","noWrap","textDecoration","InputBase","placeholder","root","input","inputProps","onChange","event","setSearch","target","value","bind","this","marginTop","user","role","IconButton","aria-label","Badge","badgeContent","cartCount","MenuItem","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","disabled","firstName","setItem","paper","flexDirection","maxWidth","avatar","margin","palette","secondary","main","form","marginBottom","submit","Profile","edit","setEdit","setFirstName","lastName","setLastName","headers","handleChange","Axios","put","password","then","response","Container","component","CssBaseline","Paper","Grid","container","item","xs","TextField","name","required","fullWidth","label","autoFocus","size","defaultValue","autoComplete","email","type","Button","cardMedia","paddingTop","transform","mediaContainer","boxShadow","minWidth","cardContent","price","fontWeight","maxHeight","textAlign","textField","marginRight","text","CardData","bookTitle","bookAuthor","bookPrice","bookImage","bookDescription","React","quantity","setQuantity","qua","updateQuantity","book","Card","backgroundcolor","CardMedia","image","CardContent","page","ButtonBase","centerRipple","align","cursor","useStyle","layout","borderColor","heading","buttons","CustomerDetails","customerId","setCustomerId","update","setUpdate","formik","useFormik","initialValues","pinCode","locality","address","landmark","city","addressType","onSubmit","values","post","data","setCustomer","validate","error","length","test","phoneNumber","pincode","handleSubmit","square","Fragment","gutterBottom","sm","errors","rows","FormControl","RadioGroup","FormControlLabel","control","Radio","CartData","Cart","cartData","setCartData","bookData","setBookData","trick","setTrick","showResults","setShowResults","showSummary","setShowSummary","customer","useEffect","axios","get","result","catch","carts","i","push","bookId","cardGrid","card","left","cart","border","removeBook","delete","results","findById","sum","map","key","JSON","stringify","bookQuantity","totalPrice","createMuiTheme","paddingBottom","addButton","wishlistButton","bottom","down","center","float","formControl","borderBottom","CardGrid","setCart","setPage","setError","expired","setExpired","cards","jwtDecoder","require","status","concat","addedToCart","addBook","decode","exp","Date","now","records","Select","labelId","md","num","CardActions","justify","Pagination","count","Math","ceil","Login","setLogin","register","setRegister","split","jwt","Avatar","LinearIndeterminate","LinearProgress","validationSchema","Yup","min","matches","confirmedPassword","oneOf","SignUp","message","setMessage","loading","setLoading","all","spread","registration","media","table","MediaCard","CardActionArea","img","TableContainer","Table","flex","TableHead","TableRow","TableCell","Admin","bookAdd","setBookAdd","ForgotPassword","mailSent","setMailSent","setForgetPasswordJwt","reset","setReset","setTimeout","noValidate","OrderDetails","author","direction","orderDate","alt","src","MyOrder","orderDetails","setOrderDetails","books","setBooks","orderData","reverse","date","StyledTableCell","withStyles","head","common","white","body","fontSize","OrderData","orderId","setOrderData","whiteSpace","TableBody","row","scope","footer","setUser","setJwt","sub","console","log","path","exact","getFullYear","href","window","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.9860e4fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cracker3.ccb5f5aa.png\";","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport {Link, Redirect} from 'react-router-dom';\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n            marginLeft: theme.spacing(2),\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: \"white\",\n        width: 500,\n        marginLeft: theme.spacing(2),\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: \"black\"\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%'\n    },\n    inputInput: {\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        color: \"black\"\n    },\n    bookIcon: {\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing(20),\n        },\n    },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n    const classes = useStyles();\n    const [reload, setReload] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const isLoggedIn = props.login || (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\")\n\n    const handleChange = (event) => {\n        props.setSearch(event.target.value)\n    }\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleIcon = () => {\n        setReload(true);\n    };\n\n    const setTokenInStorage = () => {\n        localStorage.setItem('key', \"\")\n        localStorage.setItem('userEmail', \"\")\n        // eslint-disable-next-line no-restricted-globals\n        location.reload()\n    }\n\n    return (\n        <div className={classes.grow}>\n            {reload ?\n                <Redirect to={\"/githubpages\"}/> : null\n            }\n            {reload && (props.search !== \"\") ?\n                // eslint-disable-next-line no-restricted-globals\n                location.reload() : null\n            }\n            <AppBar position=\"static\" style={{background: '#990033'}}>\n                <Toolbar>\n                    <Link to={\"/githubpages\"} style={{color: \"white\"}}>\n                        <MenuBookIcon onClick={handleIcon} className={classes.bookIcon}/>\n                    </Link>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        The Bookstore\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <Link to={\"/githubpages\"} style={{textDecoration: \"none\"}}>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{'aria-label': 'search'}}\n                                onChange={handleChange.bind(this)}\n                            />\n                        </Link>\n                    </div>\n                    <div className={classes.grow}/>\n                    <div style={{marginTop: 5}}>\n                        {\n                            (props.user.role !== \"admin\") ?\n                                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                                    <Badge badgeContent={props.cartCount} color=\"secondary\">\n\n                                        <Link to={isLoggedIn ? \"/cart\" : \"/login\"}\n                                              style={{color: \"white\", style: \"none\"}}>\n                                            <ShoppingCartIcon/>\n                                        </Link>\n\n                                    </Badge>\n                                </IconButton>\n                                :\n                                <Link to={\"/profile\"}\n                                      style={{textDecoration: \"none\", color: \"red\"}}>\n                                    <MenuItem onClick={handleClose}>Admin</MenuItem>\n                                </Link>\n                        }\n                    </div>\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle/>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            {isLoggedIn ?\n                                <MenuItem disabled={true}><b>Hello {props.user.firstName}!</b></MenuItem> : null\n                            }\n                            {props.user.role !== \"admin\" ?\n                                <Link to={!isLoggedIn ? \"/login\" : \"/profile\"}\n                                      style={{textDecoration: \"none\", color: \"black\"}}>\n                                    <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                </Link>\n                                :\n                                null\n                            }\n                            {props.user.role === \"user\" && isLoggedIn ?\n                                <Link to={\"/my-order\"} style={{textDecoration: \"none\", color: \"black\"}}>\n                                    <MenuItem onClick={handleClose}>My Orders</MenuItem>\n                                </Link>\n                                : null\n                            }\n                            {props.user.role === \"admin\" && isLoggedIn ?\n                                <Link to={\"/order-data\"} style={{textDecoration: \"none\", color: \"red\"}}>\n                                    <MenuItem onClick={handleClose}>Orders</MenuItem>\n                                </Link>\n                                : null\n                            }\n                            {props.user.role === \"admin\" && isLoggedIn ?\n                                <Link to={\"/admin\"}\n                                      style={{textDecoration: \"none\", color: \"red\"}}>\n                                    <MenuItem onClick={handleClose}>Add Books</MenuItem>\n                                </Link> :\n                                null\n                            }\n                            {localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\" ?\n                                <Link to=\"/githubpages\" style={{textDecoration: \"none\", color: \"black\"}}>\n                                    <MenuItem onClick={setTokenInStorage.bind(this)}>Sign Out</MenuItem>\n                                </Link>\n                                :\n                                <Link to=\"/login\" style={{textDecoration: \"none\", color: \"black\"}}>\n                                    <MenuItem onClick={handleClose}>Sign In</MenuItem>\n                                </Link>\n                            }\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from \"@material-ui/core/Paper\";\nimport Axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 500\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '90%',\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(6, 0, 5),\n    },\n}));\n\nexport default function Profile(props) {\n    const [edit, setEdit] = useState(false)\n    const [firstName, setFirstName] = useState(props.user.firstName)\n    const [lastName, setLastName] = useState(props.user.lastName)\n    const classes = useStyles();\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    const handleChange = () => {\n        setEdit(!edit)\n        if (edit)\n            Axios.put(\"https://d-bookstore.herokuapp.com/user\", {\n                firstName: firstName, lastName: lastName, password: props.user.password, role: props.user.role\n            }, headers).then((response) => {\n                // eslint-disable-next-line no-restricted-globals\n                location.reload()\n            })\n    }\n\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline/>\n                    <Paper className={classes.paper} variant=\"elevation\">\n                        <Typography component=\"h1\" variant=\"h5\">\n                            My Profile\n                        </Typography>\n                        <form className={classes.form}>\n                            <Grid container spacing={5}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"firstName\"\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"firstName\"\n                                        label=\"First Name\"\n                                        autoFocus\n                                        size=\"small\"\n                                        defaultValue={props.user.firstName}\n                                        onChange={(event) => setFirstName(event.target.value)}\n                                        disabled={!edit}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"lastName\"\n                                        label=\"Last Name\"\n                                        name=\"lastName\"\n                                        autoComplete=\"lname\"\n                                        size=\"small\"\n                                        onChange={(event) => setLastName(event.target.value)}\n                                        defaultValue={props.user.lastName}\n                                        disabled={!edit}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        size=\"small\"\n                                        defaultValue={props.user.email}\n                                        disabled={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        name=\"role\"\n                                        label=\"Role\"\n                                        type=\"role\"\n                                        id=\"role\"\n                                        size=\"small\"\n                                        defaultValue={props.user.role}\n                                        disabled={true}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {edit ?\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={handleChange}\n                                >\n                                    SAVE\n                                </Button>\n                                :\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={handleChange}\n                                >\n                                    CHANGE\n                                </Button>\n                            }\n                        </form>\n                    </Paper>\n                </Container>\n            }\n        </div>\n    );\n}","import Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardMedia: {\n        paddingTop: '60%',\n        width: '40%',\n        marginTop: 15,\n        marginBottom: 15,\n        marginLeft: '50%',\n        transform: 'translate(-50%)',\n    },\n    mediaContainer: {\n        backgroundColor: '#f2f2f2',\n        boxShadow: 'none',\n        borderRadius: 0,\n        [theme.breakpoints.up('md')]: {\n            minWidth: 150,\n        },\n    },\n    cardContent: {\n        height: 70,\n        flexGrow: 0,\n    },\n    price: {\n        padding: 0,\n        margin: 0,\n        fontWeight: 'bold',\n    },\n    root: {\n        '& > span': {\n            margin: theme.spacing(2),\n        },\n    },\n    input: {\n        padding: 10,\n        margin: 3,\n        maxHeight: 1,\n        width: 20,\n        textAlign: \"center\"\n    },\n    textField: {\n        marginLeft: 5,\n        marginRight: 5\n    },\n    text: {\n        marginLeft: 20\n    }\n}));\n\nexport default function CardData(props) {\n    const classes = useStyles();\n    const [quantity, setQuantity] = React.useState(props.quantity);\n\n    const handleChange = (qua) => {\n        if (qua === 1) {\n            setQuantity(quantity - 1)\n            props.updateQuantity(quantity - 1)\n        } else {\n            setQuantity(quantity + 1)\n            props.updateQuantity(quantity + 1)\n        }\n    }\n\n    let bookTitle;\n    let bookAuthor;\n    let bookPrice;\n    let bookImage;\n    let bookDescription;\n    if (props.book !== undefined) {\n        bookAuthor = props.book.bookAuthor\n        bookTitle = props.book.bookTitle\n        bookPrice = \"Rs. \" + props.book.bookPrice\n        bookImage = props.book.bookImage\n        bookDescription = props.book.bookDescription\n    }\n    return (\n        <div style={{display: props.display}}>\n            <Card className={classes.mediaContainer} style={{background: props.backgroundcolor}}>\n                <CardMedia\n                    className={classes.cardMedia}\n                    image={bookImage}\n                    title={bookDescription}\n                    style={props.style}\n                />\n            </Card>\n            <CardContent className={classes.cardContent}>\n                <Typography variant=\"body2\" component=\"h2\">\n                    {bookTitle}\n                </Typography>\n                <Typography variant={\"caption\"} color=\"textSecondary\" display=\"block\">\n                    {bookAuthor}\n                </Typography>\n                <Typography variant={\"caption\"} className={classes.price}>\n                    {bookPrice}\n                </Typography>\n                {props.page === \"cart\" ?\n                    <div>\n                        <ButtonBase type=\"button\" disabled={quantity < 2 ? true : false} centerRipple\n                                    onClick={() => handleChange(1)}>\n                            <RemoveCircleOutlineIcon color=\"primary\"/>\n                        </ButtonBase>\n                        <TextField\n                            className={classes.textField}\n                            variant=\"outlined\"\n                            disabled={true}\n                            inputProps={{\n                                className: classes.input,\n                            }}\n                            value={props.quantity}\n                        />\n                        <ButtonBase type=\"button\" centerRipple onClick={() => handleChange(2)}>\n                            <AddCircleOutlineIcon color=\"primary\"/>\n                        </ButtonBase>\n                        <Typography\n                            type=\"Button\"\n                            onClick={props.onChange}\n                            className={classes.text}\n                            align=\"left\" display='inline'\n                            style={{cursor: \"pointer\"}}\n                        >\n                            Remove\n                        </Typography>\n                    </div>\n                    : <></>\n                }\n                {props.page === \"summary\" ?\n                    <div>\n                        <br/>\n                        ({props.quantity})\n                    </div>\n                    : <></>\n                }\n            </CardContent>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useFormik} from \"formik\";\nimport Axios from \"axios\";\n\nconst useStyle = makeStyles((theme) => ({\n    layout: {\n        margin: \"20px\",\n        [theme.breakpoints.up('md')]: {\n            margin: \"50px 200px\"\n        }\n    },\n    paper: {\n        borderColor: \"#d9d9d9\",\n        borderRadius: 0,\n        backgroundColor: 'rgba(242, 242, 242,0.09)',\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    heading: {\n        padding: theme.spacing(1, 0, 2),\n    },\n    buttons: {\n        backgroundColor: \"#990033\",\n        color: \"white\",\n        marginTop: 20,\n        borderRadius: 0,\n        height: 30,\n        [theme.breakpoints.up('md')]: {\n            marginLeft: '80%',\n        },\n        marginBottom: '2%',\n        width: 115,\n        border: \"none\"\n    },\n}));\n\n\nexport default function CustomerDetails(props) {\n    const [edit, setEdit] = useState(false)\n    const [customerId, setCustomerId] = useState()\n    const [update, setUpdate] = useState(false)\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            pinCode: '',\n            locality: '',\n            address: '',\n            landmark: '',\n            city: '',\n            addressType: 'work'\n        },\n        onSubmit: values => {\n            if (update) {\n                Axios.put('https://d-bookstore.herokuapp.com/customer/' + customerId, formik.values, headers)\n                    .then(response => {\n                        props.onClick()\n                    })\n                setEdit(true)\n            } else {\n                Axios.post('https://d-bookstore.herokuapp.com/customer', formik.values, headers)\n                    .then(response => {\n                        setCustomerId(response.data.customerId)\n                        props.onClick()\n                        props.setCustomer(response.data)\n                    })\n                setUpdate(true)\n                setEdit(true)\n            }\n        },\n        validate: values => {\n            let error = {}\n            if (values.name.length < 3)\n                error.name = 'name at least have 3 character'\n            if (!/^[0-9]{10}$/i.test(values.phoneNumber))\n                error.phoneNumber = 'Must have 10 digit'\n            if (!/^[0-9]{6}$/i.test(values.pinCode))\n                error.pincode = 'Must have 6 digit'\n            return error\n        }\n    })\n\n    const classes = useStyle();\n\n    function editForm() {\n        setEdit(false)\n    }\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <main className={classes.layout}>\n                <Paper className={classes.paper} variant=\"outlined\" square>\n                    <React.Fragment>\n                        <Typography color=\"inherit\"\n                                    noWrap\n                                    variant=\"h6\"\n                                    gutterBottom\n                                    align=\"left\"\n                        >\n                            Customer Details\n                        </Typography>\n                        <Typography\n                            align=\"right\"\n                            gutterBottom\n                            style={{cursor: \"pointer\"}}\n                            onClick={editForm}\n                        >\n                            {edit ? \"Edit\" : \"\"}\n                        </Typography>\n                        <Grid item xs={12} sm={9}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        type=\"text\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Full Name\"\n                                        fullWidth\n                                        value={formik.values.name}\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                    {formik.errors.name ? <div>{formik.errors.name}</div> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        type=\"number\"\n                                        id=\"phoneNumber\"\n                                        name=\"phoneNumber\"\n                                        label=\"Phone Number\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                    {formik.errors.phoneNumber ? <div>{formik.errors.phoneNumber}</div> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        type=\"number\"\n                                        id=\"pincode\"\n                                        name=\"pinCode\"\n                                        label=\"Pincode\"\n                                        value={formik.values.pinCode}\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                    {formik.errors.pincode ? <div>{formik.errors.pincode}</div> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"locality\"\n                                        name=\"locality\"\n                                        label=\"Locality\"\n                                        value={formik.values.locality}\n                                        fullWidth\n                                        autoComplete=\"locality\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"address\"\n                                        name=\"address\"\n                                        label=\"Address\"\n                                        value={formik.values.address}\n                                        fullWidth\n                                        // multiline\n                                        rows={2}\n                                        autoComplete=\"shipping address\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"city\"\n                                        name=\"city\"\n                                        label=\"City\"\n                                        value={formik.values.city}\n                                        fullWidth\n                                        autoComplete=\"shipping address-city\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"landmark\"\n                                        name=\"landmark\"\n                                        label=\"Landmark\"\n                                        value={formik.values.landmark}\n                                        fullWidth\n                                        autoComplete=\"address-landmark\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography align=\"left\">\n                                        Type\n                                    </Typography>\n                                </Grid>\n                                <FormControl component=\"fieldset\">\n                                    <RadioGroup name=\"addressType\" value={formik.values.addressType}\n                                                onChange={formik.handleChange}>\n                                        <div>\n                                            <FormControlLabel disabled={edit} value=\"work\" control={<Radio/>}\n                                                              label=\"Work\"/>\n                                            <FormControlLabel disabled={edit} value=\"home\" control={<Radio/>}\n                                                              label=\"Home\"/>\n                                            <FormControlLabel disabled={edit} value=\"other\" control={<Radio/>}\n                                                              label=\"Other\"/>\n                                        </div>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        {!edit ?\n                            <button type=\"submit\" className={classes.buttons}>\n                                CONTINUE\n                            </button>\n                            : null\n                        }\n                    </React.Fragment>\n                </Paper>\n            </main>\n        </form>\n    );\n}","import Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardMedia: {\n        paddingTop: '60%',\n        width: '40%',\n        marginTop: 15,\n        marginBottom: 15,\n        marginLeft: '50%',\n        transform: 'translate(-50%)',\n    },\n    mediaContainer: {\n        backgroundColor: '#f2f2f2',\n        boxShadow: 'none',\n        width: 120,\n        borderRadius: 0,\n        [theme.breakpoints.up('md')]: {\n            minWidth: 150,\n        },\n    },\n    cardContent: {\n        height: 70,\n        flexGrow: 0,\n    },\n    price: {\n        padding: 0,\n        margin: 0,\n        fontWeight: 'bold',\n    },\n    root: {\n        '& > span': {\n            margin: theme.spacing(2),\n        },\n    },\n    input: {\n        padding: 10,\n        margin: 3,\n        maxHeight: 1,\n        width: 20,\n        textAlign: \"center\"\n    },\n    textField: {\n        marginLeft: 5,\n        marginRight: 5\n    },\n    text: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: 30,\n        },\n        border: \"1px solid #d9d9d9\",\n    }\n}));\n\nexport default function CartData(props) {\n    const classes = useStyles();\n    const [quantity, setQuantity] = React.useState(props.quantity);\n\n    const handleChange = (qua) => {\n        if (qua === 1) {\n            setQuantity(quantity - 1)\n            props.updateQuantity(quantity - 1)\n        } else {\n            setQuantity(quantity + 1)\n            props.updateQuantity(quantity + 1)\n        }\n    }\n\n    let bookTitle;\n    let bookAuthor;\n    let bookPrice;\n    let bookImage;\n    let bookDescription;\n    if (props.book !== undefined) {\n        bookAuthor = props.book.bookAuthor\n        bookTitle = props.book.bookTitle\n        bookPrice = \"Rs. \" + props.book.bookPrice\n        bookImage = props.book.bookImage\n        bookDescription = props.book.bookDescription\n    }\n    return (\n        <div style={{display: props.display}}>\n            <Card className={classes.mediaContainer} style={{background: props.backgroundcolor}}>\n                <CardMedia\n                    className={classes.cardMedia}\n                    image={bookImage}\n                    title={bookDescription}\n                    style={props.style}\n                />\n            </Card>\n            <CardContent className={classes.cardContent}>\n                <Typography variant=\"body2\" component=\"h2\">\n                    {bookTitle}\n                </Typography>\n                <Typography variant={\"caption\"} color=\"textSecondary\" display=\"block\">\n                    {bookAuthor}\n                </Typography>\n                <Typography variant={\"caption\"} className={classes.price}>\n                    {bookPrice}\n                </Typography>\n                {props.page === \"cart\" ?\n                    <div>\n                        <ButtonBase type=\"button\" disabled={quantity < 2 ? true : false} centerRipple\n                                    onClick={() => handleChange(1)}>\n                            <RemoveCircleOutlineIcon color=\"primary\"/>\n                        </ButtonBase>\n                        <TextField\n                            className={classes.textField}\n                            variant=\"outlined\"\n                            disabled={true}\n                            inputProps={{\n                                className: classes.input,\n                            }}\n                            value={props.quantity}\n                        />\n                        <ButtonBase type=\"button\" centerRipple onClick={() => handleChange(2)}>\n                            <AddCircleOutlineIcon color=\"primary\"/>\n                        </ButtonBase>\n                        <Typography\n                            type=\"Button\"\n                            onClick={props.onChange}\n                            className={classes.text}\n                            align=\"left\" display='inline'\n                            style={{cursor: \"pointer\"}}\n                        >\n                            Remove\n                        </Typography>\n                    </div>\n                    : <></>\n                }\n                {props.page === \"summary\" ?\n                    <div>\n                        <br/>\n                        ({props.quantity})\n                    </div>\n                    : <></>\n                }\n            </CardContent>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardData from \"./CardData\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport CartData from \"./CartData\";\n\nexport default function Cart(props) {\n    const [cartData, setCartData] = useState()\n    const [bookData, setBookData] = useState()\n    const [trick, setTrick] = useState(true)\n    const [showResults, setShowResults] = React.useState(false)\n    const [showSummary, setShowSummary] = React.useState(false)\n    const [customer, setCustomer] = useState(\"\");\n\n    const style = {\n        padding: 40,\n        height: 125,\n        width: 75,\n    }\n\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    useEffect(() => {\n        axios.get(\"https://d-bookstore.herokuapp.com/cart\", headers).then((result) => {\n            setCartData(result)\n        }).catch(error => {\n        })\n    }, [trick])\n\n    var result = [];\n    var carts = [];\n    if (cartData !== undefined) {\n        for (let i = 0; i < cartData.data.length; i++) {\n            (result.push(cartData.data[i].book.bookId))\n            carts.push(cartData.data[i])\n        }\n    }\n\n    useEffect(() => {\n        axios.get(\"https://d-bookstore.herokuapp.com/book/get-books-by-id?ids=\" + result, headers).then((result) => {\n            setBookData(result.data)\n        })\n    }, [cartData])\n\n    const useStyles = makeStyles((theme) => ({\n        cardGrid: {\n            padding: 0,\n            margin: 0,\n        },\n        card: {\n            height: '100%',\n            width: 200,\n            boxShadow: 'none',\n            display: \"flex\"\n        },\n        buttons: {\n            backgroundColor: \"#990033\",\n            color: \"white\",\n            borderRadius: 0,\n            height: 30,\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: '78%',\n            },\n            marginBottom: '5%',\n            width: 115,\n            border: \"none\"\n        },\n        root: {\n            '& > *': {\n                marginTop: theme.spacing(2),\n                position: 'absolute',\n                left: '50%',\n                transform: 'translate(-50%, -50%)'\n            },\n        },\n        title: {\n            marginTop: 15,\n            [theme.breakpoints.up('md')]: {\n                marginLeft: theme.spacing(4.5),\n            },\n        },\n        cart: {\n            border: \"thin solid #d9d9d9\",\n            margin: \"20px\",\n            marginBottom: 50,\n            paddingLeft: 20,\n            [theme.breakpoints.up('md')]: {\n                margin: \"50px 200px\"\n            }\n        }\n    }));\n\n    const removeBook = (book) => {\n        if (book !== undefined) {\n            axios.delete(\"https://d-bookstore.herokuapp.com/cart/delete-book/\" + book.bookId, headers)\n                .then((results) => {\n                    setTrick(!trick)\n                })\n        }\n    }\n\n    const updateQuantity = (quantity, book) => {\n        axios.put(\"https://d-bookstore.herokuapp.com/cart/\" + quantity + \"?book_id=\" + JSON.stringify(book.bookId), {}\n            , headers).then((results) => {\n            setTrick(!trick)\n        })\n    }\n\n    const findById = (id) => {\n        for (var i = 0; i < bookData.length; i++) {\n            if (bookData[i].bookId == id)\n                return i;\n        }\n        return 2;\n    }\n\n    const emptyCart = () => {\n        carts.map((cart, i) => (\n            axios.post(\"https://d-bookstore.herokuapp.com/order\", {\n                book: cart.book, bookQuantity: cart.quantity\n                , totalPrice: (bookData[findById(cart.book.bookId)].bookPrice * cart.quantity),\n                customer: customer\n            }, headers)\n        ))\n        axios.post(\"https://d-bookstore.herokuapp.com/mail-sender/order-confirm\", carts, headers)\n        axios.delete(\"https://d-bookstore.herokuapp.com/cart/empty-cart\", headers);\n    }\n\n    const classes = useStyles()\n\n    let sum = 0\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <div>\n                    <div className={classes.cart}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            My Cart({result.length})\n                        </Typography>\n                        {bookData !== undefined ?\n                            carts.map((cart, i) =>\n                                <div key={i} style={{height: \"100%\", width: \"100%\"}}>\n                                    <CartData quantity={cart.quantity} updateQuantity={(event) => {\n                                        updateQuantity(event, cart.book)\n                                    }} book={cart.book} onChange={() => removeBook(cart.book)}\n                                              backgroundcolor=\"none\"\n                                              style={style} display=\"flex\" page=\"cart\"/>\n                                </div>\n                            )\n                            : <h1> Data Not Available </h1>\n                        }\n                        {!showResults && result.length > 0 ?\n                            <button onClick={() => {\n                                setShowResults(true)\n                            }} className={classes.buttons}>\n                                PLACE ORDER\n                            </button>\n                            : null\n                        }\n                    </div>\n                    {showResults ?\n                        <div>\n                            <CustomerDetails setCustomer={(customer) => setCustomer(customer)} onClick={() => {\n                                setShowSummary(true)\n                            }}/>\n                        </div>\n                        :\n                        <div className={classes.cart}>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                Customer Details\n                            </Typography>\n                        </div>\n                    }\n\n                    {showSummary ?\n                        <div className={classes.cart}>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                Order Summary\n                            </Typography>\n                            {bookData !== undefined ?\n                                carts.map((cart, i) =>\n                                    <div key={i} style={{height: \"100%\", width: \"100%\"}}>\n                                        <CardData quantity={cart.quantity} book={bookData[i]}\n                                                  onChange={() => removeBook(cart.bookId)} backgroundcolor=\"none\"\n                                                  style={style} display=\"flex\" page=\"summary\"/>\n                                        <div style={{display: \"none\"}}>\n                                            {sum = sum + cart.quantity * bookData[i].bookPrice}\n                                        </div>\n                                    </div>\n                                )\n                                : <h1> Data Not Available </h1>\n                            }\n                            <div style={{}}>\n                                <Typography variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>\n                                    Total Amount<br/>\n                                    Rs. {sum}\n                                </Typography>\n                            </div>\n                            <Link to={\"/order-confirm\"}>\n                                <button className={classes.buttons} onClick={emptyCart}>CHECKOUT</button>\n                            </Link>\n                        </div>\n                        :\n                        <div className={classes.cart}>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                Order Summary\n                            </Typography>\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport CardData from './CardData'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#990033'\n        }\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(12),\n    },\n    card: {\n        height: '100%',\n        boxShadow: 'none',\n        border: \"thin solid #d9d9d9\",\n    },\n    addButton: {\n        width: '100%',\n        border: \"thin solid #d5cccc\",\n        padding: 0,\n        boxShadow: 'none',\n        height: 30,\n        textAlign: 'center',\n        backgroundColor: \"#b3003b\"\n    },\n    wishlistButton: {\n        width: '50%',\n        border: \"thin solid #d5cccc\",\n        padding: 0,\n        boxShadow: 'none',\n        height: 30,\n        textAlign: 'center',\n    },\n    root: {\n        '& > *': {\n            marginTop: theme.spacing(2),\n            transform: 'translate(-50%, -50%)',\n            position: 'relative',\n            marginLeft: '59%',\n            bottom: 60,\n            [theme.breakpoints.down('sm')]: {\n                bottom: 40,\n                marginLeft: '50%',\n            },\n        },\n    },\n    center: {\n        '& > *': {\n            marginTop: theme.spacing(2),\n            transform: 'translate(-50%, -50%)',\n            position: 'relative',\n            marginLeft: '63.5%',\n            bottom: 60,\n            [theme.breakpoints.down('sm')]: {\n                bottom: 40,\n                marginLeft: '56%',\n            },\n        },\n    },\n    title: {\n        marginTop: '3.1%',\n        paddingLeft: 15,\n        float: \"left\",\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing(24),\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        marginTop: '2.5%',\n        width: 200,\n        float: \"right\",\n        border: \"1px solid #d9d9d9\",\n        borderBottom: \"none\"\n    },\n}));\n\nexport default function CardGrid(props) {\n    const [bookData, setBookData] = useState();\n    const classes = useStyles();\n    const [cart, setCart] = useState([])\n    const [page, setPage] = React.useState(1);\n    const [error, setError] = useState();\n    const [expired, setExpired] = useState(false);\n    const itemsPerPage = 12;\n    const cards = [];\n    const jwtDecoder = require(\"jsonwebtoken\")\n\n    useEffect(() => {\n        setError(\"Loading Books...\")\n        axios.get('https://d-bookstore.herokuapp.com/book/sorted/default/' + props.search)\n            .then((results) => {\n                setBookData(results.data);\n                setError(\"\")\n            }).catch((error) => {\n            if (error.response.status === 404)\n                setError(\"No Books Found!\")\n            if (error.response.status === 403)\n                setExpired(true);\n        });\n        setPage(1);\n    }, [props.search]);\n\n    useEffect(() => {\n        if (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\")\n            axios.get('https://d-bookstore.herokuapp.com/cart', headers)\n                .then((results) => {\n                    setCart(() => cart.concat(results.data))\n                });\n        setPage(1);\n    }, []);\n\n    const handleChange = (event, value) => {\n        setPage(value);\n    };\n\n    const updateCart = () => {\n        addedToCart = false\n    }\n\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    var addedToCart = true;\n\n    const addBook = (value) => {\n        axios.post('https://d-bookstore.herokuapp.com/cart', {book: value, quantity: 1}\n            , headers)\n            .then((results) => {\n                setCart(() => cart.concat(results.data))\n            }).catch(error => {\n            if (error.response.status === 403)\n                setExpired(true);\n        });\n    }\n\n    const handleSort = (event) => {\n        axios.get('https://d-bookstore.herokuapp.com/book/sorted/' + event.target.value + \"/\" + props.search)\n            .then((results\n            ) => {\n                setBookData(results.data);\n            });\n        setPage(1);\n    }\n\n    if (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\" && jwtDecoder.decode(localStorage.getItem('key')).exp < Date.now() / 1000) {\n        localStorage.setItem('key', \"\")\n        // eslint-disable-next-line no-restricted-globals\n        location.reload()\n    }\n\n    if (bookData !== undefined) {\n        var records = (bookData.length)\n        for (let bookId = 1 + itemsPerPage * (page - 1); bookId <= itemsPerPage * page && bookId <= bookData.length\n            ; bookId++) {\n            (cards.push(bookId));\n        }\n    }\n\n    return (\n        <>\n            {expired ?\n                <Redirect to={\"/login\"}/> : null\n            }\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                Books({records} books)\n            </Typography>\n            <FormControl className={classes.formControl}>\n                <Select\n                    defaultValue={\"default\"}\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"select\"\n                    onChange={handleSort}\n                >\n                    <MenuItem value=\"default\"> Sort By : Default</MenuItem>\n                    <MenuItem value=\"increasing\">Price : Low to High</MenuItem>\n                    <MenuItem value=\"decreasing\">Price : High to Low</MenuItem>\n                    <MenuItem value=\"newlyArrived\">Newly Arrived</MenuItem>\n                </Select>\n            </FormControl>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={3}>\n                    {cards.map((card, i) => <Grid item key={card} xs={12} sm={6} md={3}>\n                        {addedToCart = true}\n                        <Card className={classes.card}>\n                            {\n                                cart.map(num => {\n                                    if (JSON.stringify(num.book) === JSON.stringify(bookData[card - 1]))\n                                        updateCart();\n                                })}\n                            <CardData book={bookData[card - 1]}/>\n                            <CardActions>\n                                {(props.user.role !== \"admin\") ?\n                                    (addedToCart) ?\n                                        <MuiThemeProvider theme={theme}>\n                                            {localStorage.getItem('key') === \"\" ?\n                                                <Button size={\"large\"} variant={\"contained\"} color={\"secondary\"}\n                                                        className={classes\n                                                            .addButton}\n                                                        onClick={addBook.bind(this, bookData[card - 1].bookId)}>\n                                                    <Link to=\"/login\"\n                                                          style={{color: \"white\", textDecoration: \"none\"}}>\n                                                        <Typography variant={\"caption\"}>\n                                                            ADD TO CART\n                                                        </Typography>\n                                                    </Link>\n                                                </Button>\n                                                :\n                                                <Button size={\"large\"} variant={\"contained\"} color={\"secondary\"}\n                                                        className={classes\n                                                            .addButton}\n                                                        onClick={addBook.bind(this, bookData[card - 1])}>\n                                                    <Typography variant={\"caption\"}>\n                                                        ADD TO CART\n                                                    </Typography>\n                                                </Button>\n                                            }\n                                        </MuiThemeProvider>\n                                        :\n                                        <button className={classes.addButton}\n                                                style={{width: \"100%\", backgroundColor: \"blue\"}}>\n                                            <Typography variant={\"caption\"} style={{color: \"white\"}}>\n                                                ADDED TO BAG\n                                            </Typography>\n                                        </button>\n                                    :\n                                    null\n                                }\n                            </CardActions>\n                        </Card>\n                    </Grid>)}\n                    <Grid container justify=\"center\">\n                        <Typography component=\"h3\" variant=\"h4\">{error}</Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n            {bookData !== undefined ?\n                <div className={records / itemsPerPage >= 3 ? classes.root : classes.center}>\n                    <Pagination count={Math.ceil(records / itemsPerPage)} color=\"secondary\" page={page}\n                                onChange={handleChange}/>\n                </div>\n                :\n                null\n            }\n        </>\n    )\n}","import React, {useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useFormik} from \"formik\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n    const [login, setLogin] = useState(false)\n    const [register, setRegister] = useState(\" \")\n    const classes = useStyles();\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        onSubmit: values => {\n            formik.values.email = formik.values.email.split(\" \")[0]\n            Axios.post('https://d-bookstore.herokuapp.com/authenticate', formik.values)\n                .then(response => {\n                    localStorage.setItem('key', response.data.jwt)\n                    localStorage.setItem('userEmail', formik.values.email.split(\" \")[0])\n                    setLogin(true)\n                    props.login(true)\n                }).catch(error => {\n                if (error.response.data.status === 403)\n                    setRegister(\"Invalid Username Or Password!\");\n            })\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ?\n                <Redirect to={\"/githubpages\"}/> : null\n            }\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Typography component=\"h3\" variant=\"h6\" style={{color: \"#e60000\"}}>\n                    {register}\n                </Typography>\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={formik.values.email}\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={formik.handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formik.values.password}\n                        autoComplete=\"current-password\"\n                        onChange={formik.handleChange}\n                    />\n                    {login ?\n                        <Link to={\"/githubpages\"}>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n\n                            </Button>\n                        </Link>\n                        :\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n\n                        </Button>\n                    }\n                    <Grid container>\n                        <Grid item xs>\n                            <Link to={\"/forgot-password\"} variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to={\"/sign-up\"} variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function LinearIndeterminate() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress/>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport {Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from \"@material-ui/core/Paper\";\nimport * as Yup from 'yup'\nimport {useFormik} from \"formik\";\nimport Axios from \"axios\";\nimport LinearIndeterminate from \"./loading\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 500\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '90%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: \"blue\",\n        color: \"white\",\n        \"&:hover\": {\n            backgroundColor: \"blue\"\n        }\n    },\n}));\n\nconst validationSchema = Yup.object().shape({\n    firstName: Yup.string().min(3, \"Minimum 3 characters\"),\n    lastName: Yup.string().min(3, \"Minimum 3 characters\"),\n    email: Yup.string().email(\"Invalid\"),\n    password: Yup.string()\n        .matches(\n            \"^(?=.{4,})(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]*[^A-Za-z0-9][A-Za-z0-9]*$\",\n            \"Must contain at least 4 Characters with at least One Uppercase, One Lowercase, One Special Character and One Number\"\n        ),\n    confirmedPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'password must match')\n})\n\nexport default function SignUp() {\n    const [message, setMessage] = useState();\n    const [loading, setLoading] = useState(false)\n\n    const {handleSubmit, handleChange, values, errors} = useFormik({\n        initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmedPassword: \"\"\n        },\n        validationSchema,\n        onSubmit: values => {\n            setLoading(true)\n            Axios.all([\n                Axios.post(\"https://d-bookstore.herokuapp.com/user\", values),\n                Axios.post(\"https://d-bookstore.herokuapp.com/mail-sender/register\", {\n                    name: values.firstName,\n                    email: values.email\n                })\n            ])\n                .then(Axios.spread((registration, email) => {\n                    if (registration.status === 201)\n                        setMessage(\"User Registered Successfully!\")\n                    setLoading(false)\n                }))\n                .catch(error => {\n                    if (error.response.status === 409)\n                        setMessage(\"Email Already Registered!\");\n                    setLoading(false)\n                })\n        }\n    })\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Paper className={classes.paper} variant=\"elevation\">\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                {loading ?\n                    <LinearIndeterminate/>\n                    : null\n                }\n                <Typography component=\"h3\" variant=\"h6\" style={message === 'User Registered Successfully!'\n                    ? {color: \"green\"} : {color: \"#e60000\"}}>\n                    {message}\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.firstName}\n\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.firstName ? errors.firstName : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.lastName}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.lastName ? errors.lastName : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.email}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.email ? errors.email : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.password}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.password ? errors.password : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmedPassword\"\n                                label=\"Confirmed Password\"\n                                type=\"password\"\n                                id=\"confirmedPassword\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.confirmedPassword}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.confirmedPassword ? errors.confirmedPassword : null}\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Link to=\"/login\" variant=\"body2\">\n                                {\"Already have an account? Sign in\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <h1></h1>{}\n            </Paper>\n        </Container>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport img from \"../images/cracker3.png\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: '100%',\n        maxHeight: '100%',\n        display: 'flex',\n        justify: 'center',\n    },\n    item: {\n        justify: 'centre'\n    },\n    media: {\n        width: 400,\n        [theme.breakpoints.up(\"md\")]: {\n            height: 250\n        },\n        height: 200,\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    table: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: \"24%\"\n        }\n    }\n}));\n\nexport default function MediaCard() {\n    const classes = useStyles();\n\n    return (\n        // <Card className={classes.root}>\n        <CardActionArea style={{paddingTop: 20}}>\n            <Grid>\n                <Typography variant=\"h6\" color=\"inherit\" align={\"center\"}> Your Order Has Been Placed\n                    Successfully!\n                </Typography>\n            </Grid>\n            <CardMedia\n                className={classes.media}\n                image={img}\n                title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\" align={\"center\"}>\n                    Hurray!!!\n                </Typography>\n                <Typography align={\"center\"}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Your order number is #2001539. We have emailed your order confirmation, and will\n                        send you an update when your order has shipped.\n                    </Typography>\n\n                    <TableContainer>\n                        <Typography align=\"center\" style={{width: 700}} className={classes.table}>\n                            <Table size=\"small\" border={1} style={{flex: \"center\"}}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"center\">Email us</TableCell>\n                                        <TableCell align=\"center\">Contact</TableCell>\n                                        <TableCell align=\"center\">Address</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <tbody>\n                                <TableRow>\n                                    <TableCell align=\"center\">abc@bridgelabz.com </TableCell>\n                                    <TableCell align=\"center\">+911234567890</TableCell>\n                                    <TableCell align=\"left\">Malhotra Complex,sector 23,RM marg,mumbai 40001\n                                    </TableCell>\n                                </TableRow>\n                                </tbody>\n                            </Table>\n                        </Typography>\n                    </TableContainer>\n                </Typography>\n                <br/>\n                <Typography align={\"center\"}>\n                    <Link to={\"/githubpages\"} style={{textDecoration: \"none\"}}>\n                        <Button style={{marginBottom: 40, backgroundColor: \"#990033\", color: \"white\"}}\n                                variant=\"contained\" color=\"secondary\" size={\"medium\"}>\n                            Continue Shopping\n                        </Button>\n                    </Link>\n                </Typography>\n            </CardContent>\n        </CardActionArea>\n    )\n}","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport {useFormik} from \"formik\";\nimport LinearIndeterminate from \"./loading\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Admin() {\n    const classes = useStyles();\n    const [bookAdd, setBookAdd] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const formik = useFormik({\n        initialValues: {\n            bookTitle: '',\n            bookAuthor: '',\n            bookDescription: '',\n            bookQuantity: '',\n            bookPrice: '',\n            bookImage: '',\n        },\n        onSubmit: values => {\n            setLoading(true)\n            Axios.post(\"https://d-bookstore.herokuapp.com/book\", formik.values, headers).then((response) => {\n                if (response.status === 200) {\n                    setBookAdd(true)\n                    setLoading(false)\n                }\n            })\n        },\n        validate: values => {\n            let error = {}\n            if (values.bookTitle.length < 3)\n                error.bookTitle = 'title at least have 3 character'\n            if (values.bookAuthor.length < 3)\n                error.bookAuthor = 'title at least have 3 character'\n            if (values.bookDescription.length < 3)\n                error.bookDescription = 'title at least have 3 character'\n            if (values.bookQuantity < 1)\n                error.bookQuantity = 'enter no greater than 0'\n            if (values.bookPrice < 0)\n                error.bookPrice = 'enter positive number'\n            return error\n        }\n    })\n\n    const reload = () => {\n        // eslint-disable-next-line no-restricted-globals\n        location.reload()\n    }\n\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline/>\n                    <div className={classes.paper}>\n                        <Typography variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\n                            Add Book\n                        </Typography>\n                        {loading ?\n                            <LinearIndeterminate/>\n                            : null\n                        }\n                        {bookAdd ?\n                            <Typography component=\"h3\" variant=\"h6\" style={{color: \"green\"}}>\n                                <b>Book Added Successfully!</b>\n                            </Typography> : null\n                        }\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        name=\"bookTitle\"\n                                        variant=\"outlined\"\n                                        type=\"text\"\n                                        fullWidth\n                                        id=\"bookTitle\"\n                                        label=\"Book Title\"\n                                        value={formik.values.bookTitle}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookTitle}</error> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"text\"\n                                        id=\"bookAuthor\"\n                                        label=\"Book Author\"\n                                        name=\"bookAuthor\"\n                                        value={formik.values.bookAuthor}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookAuthor && !formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookAuthor}</error> : null}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"text\"\n                                        id=\"bookDescription\"\n                                        label=\"Book Description\"\n                                        name=\"bookDescription\"\n                                        value={formik.values.bookDescription}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookDescription && !formik.errors.bookAuthor\n                                    && !formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookDescription}</error> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"number\"\n                                        name=\"bookQuantity\"\n                                        label=\"Quantity\"\n                                        id=\"bookQuantity\"\n                                        // minimumValue=1\n                                        value={formik.values.bookQuantity}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookQuantity && !formik.errors.bookDescription && !formik.errors.bookAuthor\n                                    && !formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookQuantity}</error> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"number\"\n                                        name=\"bookPrice\"\n                                        label=\"Price\"\n                                        id=\"bookPrice\"\n                                        value={formik.values.bookPrice}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookPrice && !formik.errors.bookDescription && !formik.errors.bookAuthor\n                                    && !formik.errors.bookTitle && !formik.errors.bookQuantity ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookPrice}</error> : null}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        type=\"url\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        id=\"bookImage\"\n                                        label=\"Book Image Url\"\n                                        name=\"bookImage\"\n                                        value={formik.values.bookImage}\n                                        onChange={formik.handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                    >\n                                        Save\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Button\n                                        type=\"reset\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                        onClick={reload}\n                                    >\n                                        Reset\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Container>\n            }\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useFormik} from \"formik\";\nimport LinearIndeterminate from \"./loading\";\nimport * as Yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid\")\n})\n\nexport default function ForgotPassword(props) {\n    const [login, setLogin] = useState(false)\n    const [mailSent, setMailSent] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState()\n    const classes = useStyles();\n    const {handleSubmit, handleChange, values, errors} = useFormik({\n        initialValues: {\n            email: ''\n        },\n        validationSchema,\n        onSubmit: values => {\n            setLoading(true);\n            Axios.get(\"https://d-bookstore.herokuapp.com/user?email=\" + values.email)\n                .then((response) => {\n                        Axios.post(\"https://d-bookstore.herokuapp.com/mail-sender/forget-password\", {\n                            email: values.email,\n                            password: response.data.password,\n                            name: response.data.firstName\n                        }).then((response) => {\n                            props.setForgetPasswordJwt(response.data.jwt);\n                            localStorage.setItem('userEmail', values.email)\n                            localStorage.setItem('key', response.data.jwt)\n                            setLoading(false)\n                            setMailSent(true)\n                            setError()\n                        })\n                    }\n                ).catch(error => {\n                if (error.response.status === 404) {\n                    setError(\"User Not Registered!\")\n                    setLoading(false)\n                    setMailSent(false)\n                }\n            })\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ?\n                <Redirect to={\"/githubpages\"}/> : null\n            }\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                {loading ?\n                    <LinearIndeterminate/>\n                    : null\n                }\n                <Typography component=\"h1\" variant=\"h5\">\n                    Forget Password\n                </Typography>\n                <Typography component=\"h4\" variant=\"h5\" style={{color: \"#e60000\"}}>\n                    {error}\n                </Typography>\n                {mailSent ?\n                    <Typography component=\"h3\" variant=\"h6\" style={{color: \"green\"}}>\n                        Password reset link is sent to your email.\n                    </Typography>\n                    :\n                    null\n                }\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={values.email}\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleChange}\n                    />\n                    <div style={{color: \"red\"}}>\n                        {errors.email ? errors.email : null}\n                    </div>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Reset Password\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React, {useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useFormik} from \"formik\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = Yup.object().shape({\n    password: Yup.string()\n        .matches(\n            \"^(?=.{4,})(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]*$\",\n            \"Must Contain 4 Characters, at least One Uppercase and One Number\"\n        ),\n    confirmedPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'password must match')\n})\n\nexport default function ForgotPassword(props) {\n    const [login, setLogin] = useState(false)\n    const [reset, setReset] = useState()\n    const classes = useStyles();\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const {handleSubmit, handleChange, values, errors} = useFormik({\n        initialValues: {\n            email: ''\n        },\n        validationSchema,\n        onSubmit: values => {\n            Axios.put(\"https://d-bookstore.herokuapp.com/user\", {\n                email: props.user.email, password: values.password\n                , firstName: props.user.firstName, lastName: props.user.lastName\n            }, headers).then((response => {\n                if (response.status === 200)\n                    setReset(\"Password Changed Successfully!\")\n            }))\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ?\n                <Redirect to={\"/login\"}/> : null\n            }\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    New Password\n                </Typography>\n                {reset !== undefined ?\n                    (\n                        setTimeout(() => {\n                                setLogin(true)\n                            },\n                            1000),\n                            <Typography component=\"h3\" variant=\"h6\" style={{color: \"green\"}}>\n                                {reset}\n                            </Typography>\n                    )\n                    :\n                    null\n                }\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.password}\n                            />\n                            {errors.password ? errors.password : null}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmedPassword\"\n                                label=\"Confirm Password\"\n                                type=\"password\"\n                                id=\"confirmedPassword\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.confirmedPassword}\n                            />\n                            {errors.confirmedPassword ? errors.confirmedPassword : null}\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Reset Password\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport img from \"../images/cracker3.png\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 15\n    },\n    paper: {\n        padding: theme.spacing(3),\n        margin: 'auto',\n        maxWidth: 700\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        width: 100,\n        height: 128,\n    },\n    cart: {\n        paddingLeft: 20\n    }\n}));\n\nexport default function OrderDetails(props) {\n    const classes = useStyles();\n    let title;\n    let author;\n    let image;\n    if (props.book !== undefined) {\n        title = props.book.bookTitle;\n        image = props.book.bookImage;\n        author = props.book.bookAuthor\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} variant=\"outlined\">\n                <div>\n                    <Grid item direction=\"column\">\n                        <h3>{props.orderDate}</h3>\n                    </Grid>\n                    <Grid container spacing={3} className={(props.page === \"orderSummary\") ? classes.cart : null}>\n                        <Grid item>\n                            <img className={classes.img} alt=\"complex\" src={image}/>\n                        </Grid>\n                        <Grid item xs container direction=\"column\" spacing={4}>\n                            <Grid item xs>\n                                <Typography gutterBottom variant=\"subtitle1\" align=\"justify\">\n                                    {title}\n                                </Typography>\n                                <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" align=\"left\">\n                                    By {author}\n                                </Typography>\n                                <Typography gutterBottom variant=\"body2\" align=\"left\">\n                                    ({props.quantity})\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid>\n                            <Typography style={{marginTop: 12}} variant=\"subtitle1\" align=\"left\">\n                                <b>\n                                    Rs. {props.price}\n                                </b>\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Paper>\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Axios from \"axios\";\nimport Button from \"@material-ui/core/Button\"\nimport OrderDetails from \"./OrderDetails\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 15\n    },\n    paper: {\n        padding: theme.spacing(3),\n        margin: 'auto',\n        maxWidth: 700\n    },\n    title: {\n        marginTop: 15,\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing(4.5),\n        },\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        width: 100,\n        height: 128,\n    },\n    cart: {\n        border: \"thin solid #d9d9d9\",\n        // margin: \"50px\",\n        // paddingLeft : 20,\n        [theme.breakpoints.up('md')]: {\n            margin: \"50px 200px\"\n        }\n    }\n}));\n\nexport default function MyOrder(props) {\n    const classes = useStyles();\n    const [orderDetails, setOrderDetails] = useState();\n    const [books, setBooks] = useState()\n\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\")\n            Axios.get('https://d-bookstore.herokuapp.com/order', headers)\n                .then((response) => {\n                    setOrderDetails(response)\n                })\n    }, []);\n\n    let bookId = []\n    let orderData = []\n    if (orderDetails !== undefined) {\n        for (let i = 0; i < orderDetails.data.length; i++) {\n            (bookId.push(orderDetails.data[i].book.bookId))\n            orderData.push(orderDetails.data[i])\n        }\n    }\n\n    const findById = (id) => {\n        for (var i = 0; i < books.length; i++) {\n            if (books[i].bookId == id)\n                return i;\n        }\n        return 2;\n    }\n\n    useEffect(() => {\n        Axios.get(\"https://d-bookstore.herokuapp.com/book/get-books-by-id?ids=\" + bookId, headers).then((result) => {\n            setBooks(result.data)\n        })\n    }, [orderDetails]);\n\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <div>\n                    <Grid className={classes.cart}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            My Orders({bookId.length} items)\n                        </Typography>\n                        <Grid style={{marginBottom: 20}}>\n                            {orderData.length !== 0 && books !== undefined ?\n                                orderData.reverse().map((data, i) =>\n                                    <div key={i}>\n                                        <OrderDetails book={books[findById(bookId[orderData.length - i - 1])]}\n                                                      orderDate={orderData[i].date}\n                                                      price={data.totalPrice}\n                                                      quantity={data.bookQuantity}/>\n                                    </div>\n                                )\n                                :\n                                <div>\n                                    <br/>\n                                    <Link to={\"/githubpages\"} style={{textDecoration: \"none\"}}>\n                                        <Button\n                                            variant=\"contained\"\n                                            style={{backgroundColor: \"#990033\", color: \"white\", marginLeft: 30}}\n                                        >\n                                            SHOP NOW\n                                        </Button>\n                                    </Link>\n                                </div>\n                            }\n                        </Grid>\n                    </Grid>\n                </div>\n            }\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"blue\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        margin: \"20px\",\n        [theme.breakpoints.up('md')]: {\n            margin: \"50px 200px\"\n        },\n        marginBottom: 40\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\n\nfunction createData(orderId, email, book, address, quantity, price, orderDate) {\n    return {orderId, email, book, address, quantity, price, orderDate};\n}\n\nexport default function OrderData() {\n    const classes = useStyles();\n    const [orderData, setOrderData] = useState();\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const rows = [];\n    if (orderData !== undefined) {\n        for (let i = orderData.length - 1; i >= 0; i--) {\n            rows.push(createData(orderData[i].orderId, orderData[i].user.email, orderData[i].book.bookTitle, orderData[i].customer.name + \", \" + orderData[i].customer.address\n                + \", \" + orderData[i].customer.city + \", \" +\n                orderData[i].customer.landmark + \", \" +\n                orderData[i].customer.locality, orderData[i].bookQuantity, orderData[i].totalPrice, orderData[i].date))\n        }\n    }\n    useEffect(() => {\n        axios.get(\"https://d-bookstore.herokuapp.com/order/all\", headers).then((response) =>\n            setOrderData(response.data),\n        )\n    }, [])\n\n    return (\n        <>\n            <main className={classes.layout}>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                    Orders({rows.length} items)\n                </Typography>\n                <TableContainer component={Paper}>\n                    {/*<h1>Orders</h1>*/}\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell style={{whiteSpace: \"nowrap\"}}>Id</StyledTableCell>\n                                <StyledTableCell>User Email</StyledTableCell>\n                                <StyledTableCell align=\"right\">BookName</StyledTableCell>\n                                <StyledTableCell align=\"right\">Deliver To</StyledTableCell>\n                                <StyledTableCell align=\"right\">Quantity</StyledTableCell>\n                                <StyledTableCell style={{whiteSpace: \"nowrap\"}} align=\"right\">Total\n                                    Price</StyledTableCell>\n                                <StyledTableCell align=\"right\">Order Date</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row, i) => (\n                                <TableRow key={row.orderId}>\n                                    <TableCell align=\"right\">{row.orderId}</TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.email}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{row.book}</TableCell>\n                                    <TableCell align=\"right\">{row.address}</TableCell>\n                                    <TableCell align=\"right\">{row.quantity}</TableCell>\n                                    <TableCell align=\"right\">{row.price}</TableCell>\n                                    <TableCell style={{whiteSpace: \"nowrap\"}} align=\"right\">{row.orderDate}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </main>\n        </>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport PrimarySearchAppBar from './component/AppBar';\nimport Profile from \"./component/Profile\";\nimport Cart from './component/Cart'\nimport CardGrid from './component/CardGrid'\nimport Login from './component/Login'\nimport SignUp from './component/SignUp'\nimport CustomerDetails from './component/CustomerDetails'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport OrderConfirm from \"./component/OrderConfirm\";\nimport Axios from \"axios\";\nimport Admin from \"./component/Admin\";\nimport ForgotPassword from \"./component/ForgotPassword\";\nimport ResetPassword from \"./component/ResetPassword\";\nimport MyOrder from \"./component/MyOrder\";\nimport OrderData from \"./component/OrderData\";\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: \"#990033\",\n        padding: theme.spacing(1),\n        position: \"fixed\",\n        maxHeight: 40,\n        bottom: 0,\n        width: '100%',\n        height: 60, /* Height of the footer */\n        background: '#6cf',\n    },\n}));\n\nexport default function () {\n    const [cartCount] = useState(0)\n    const [search, setSearch] = useState(\"\")\n    const [login, setLogin] = useState(\"\")\n    const [user, setUser] = useState(\"\")\n    const [jwt, setJwt] = useState(\"\")\n    const classes = useStyles();\n    const jwtDecoder = require(\"jsonwebtoken\")\n\n    useEffect(() => {\n        if (localStorage.getItem('key') !== \"\" && localStorage.getItem('key') !== undefined && localStorage.getItem('key') != null) {\n            Axios.get(\"https://d-bookstore.herokuapp.com/user?email=\" + jwtDecoder.decode(localStorage.getItem('key')).sub)\n                .then((response) => {\n                        console.log(\"loaded user\")\n                        setUser(response.data)\n                    }\n                )\n        }\n        setJwt(localStorage.getItem('jwt'))\n    }, [login])\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <Router>\n                <PrimarySearchAppBar user={user} search={search} login={login} cartCount={cartCount}\n                                     setSearch={(value) => setSearch(value)}/>\n                <main>\n                    <Switch>\n                        <Route path=\"/githubpages\" exact\n                               component={() => (<CardGrid user={user} search={search}/>)}/>\n                        <Route path=\"/sign-up\" exact\n                               component={() => (<SignUp/>)}/>\n                        <Route path=\"/my-order\" exact\n                               component={() => (<MyOrder/>)}/>\n                        <Route path=\"/forgot-password\" exact\n                               component={() => (<ForgotPassword\n                                   setForgetPasswordJwt={(jwt) => localStorage.setItem('jwt', \"/reset-password/\" + jwt)}/>)}/>\n                        <Route path=\"/admin\" exact\n                               component={() => (<Admin/>)}/>\n                        <Route path=\"/order-data\" exact\n                               component={() => (<OrderData/>)}/>\n                        <Route path=\"/profile\" exact\n                               component={() => (<Profile user={user}/>)}/>\n                        <Route path=\"/login\" exact\n                               component={() => (<Login login={(login) => setLogin(login)}/>)}/>\n                        <Route path=\"/cart\" exact\n                               component={() => (<Cart cartCount={cartCount}/>)}/>\n                        <Route path=\"/customer\" exact\n                               component={() => (<CustomerDetails/>)}/>\n                        <Route path=\"/order-confirm\" exact\n                               component={() => (<OrderConfirm/>)}/>\n                        <Route path={jwt} exact\n                               component={() => (<ResetPassword user={user}/>)}/>\n                    </Switch>\n                </main>\n            </Router>\n            <footer className={classes.footer}>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    {new Date().getFullYear()} Copyright: <a href=\"https://www.bookstore.com\"> TheBookStore.com </a>\n                </Typography>\n            </footer>\n        </React.Fragment>\n    );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}