{"version":3,"sources":["images/cracker3.png","component/AppBar.js","component/Profile.js","component/CardData.js","component/CustomerDetails.js","component/Cart.js","component/CardGrid.js","component/Login.js","component/loading.js","component/SignUp.js","component/OrderConfirm.js","component/Admin.js","component/ForgotPassword.js","component/ResetPassword.js","component/OrderDetails.js","component/MyOrder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","title","display","breakpoints","up","marginLeft","spacing","search","position","borderRadius","shape","backgroundColor","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","color","inputRoot","inputInput","paddingLeft","bookIcon","PrimarySearchAppBar","props","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","isLoggedIn","login","localStorage","getItem","undefined","handleClose","className","AppBar","style","background","Toolbar","to","Typography","variant","noWrap","textDecoration","InputBase","placeholder","root","input","inputProps","onChange","event","setSearch","target","value","bind","this","marginTop","IconButton","aria-label","Badge","badgeContent","cartCount","aria-controls","aria-haspopup","onClick","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","disabled","user","firstName","role","setItem","location","reload","paper","flexDirection","maxWidth","avatar","margin","palette","secondary","main","form","marginBottom","submit","Profile","edit","setEdit","setFirstName","lastName","setLastName","headers","handleChange","Axios","put","password","then","response","Container","component","CssBaseline","Paper","Grid","container","item","xs","TextField","name","required","fullWidth","label","autoFocus","size","defaultValue","autoComplete","email","type","Button","cardMedia","paddingTop","transform","mediaContainer","boxShadow","minWidth","cardContent","price","fontWeight","maxHeight","textAlign","textField","marginRight","text","CardData","bookTitle","bookAuthor","bookPrice","bookImage","bookDescription","quantity","setQuantity","qua","updateQuantity","book","Card","backgroundcolor","CardMedia","image","CardContent","page","ButtonBase","centerRipple","align","cursor","useStyle","layout","borderColor","heading","buttons","CustomerDetails","customerId","setCustomerId","update","setUpdate","formik","useFormik","initialValues","pinCode","locality","address","landmark","city","addressType","onSubmit","values","post","data","setCustomer","validate","error","length","test","phoneNumber","pincode","handleSubmit","square","Fragment","gutterBottom","sm","errors","rows","FormControl","RadioGroup","FormControlLabel","control","Radio","Cart","cartData","setCartData","bookData","setBookData","trick","setTrick","showResults","setShowResults","showSummary","setShowSummary","customer","useEffect","axios","get","result","catch","console","log","carts","i","push","bookId","cardGrid","card","left","cart","border","removeBook","delete","results","findById","sum","map","key","JSON","stringify","bookQuantity","totalPrice","createMuiTheme","paddingBottom","addButton","wishlistButton","bottom","down","center","float","formControl","borderBottom","CardGrid","setCart","setPage","setError","expired","setExpired","cards","jwtDecoder","require","status","concat","addedToCart","addBook","decode","exp","Date","now","records","Select","labelId","md","num","CardActions","justify","Pagination","count","Math","ceil","Login","setLogin","register","setRegister","jwt","Avatar","LinearIndeterminate","LinearProgress","validationSchema","Yup","min","matches","confirmedPassword","oneOf","SignUp","message","setMessage","loading","setLoading","all","spread","registration","Link","href","media","table","MediaCard","CardActionArea","img","TableContainer","Table","flex","TableHead","TableRow","TableCell","Admin","bookAdd","setBookAdd","ForgotPassword","mailSent","setMailSent","setForgetPasswordJwt","reset","setReset","setTimeout","noValidate","OrderDetails","author","alt","src","direction","MyOrder","orderDetails","setOrderDetails","books","setBooks","orderData","reverse","footer","setUser","setJwt","sub","path","exact","getFullYear","window","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.5e68348c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cracker3.ccb5f5aa.png\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport {Link} from 'react-router-dom';\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n            marginLeft: theme.spacing(2),\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: \"white\",\n        width: 500,\n        marginLeft: theme.spacing(2),\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: \"black\"\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%'\n    },\n    inputInput: {\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        color: \"black\"\n    },\n    bookIcon: {\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing(20),\n        },\n    },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const isLoggedIn = props.login || (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\")\n\n    const handleChange = (event) => {\n        props.setSearch(event.target.value)\n    }\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const setTokenInStorage = () => {\n        localStorage.setItem('key', \"\")\n        localStorage.setItem('userEmail', \"\")\n        // eslint-disable-next-line no-restricted-globals\n        location.reload()\n    }\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\" style={{background: '#990033'}}>\n                <Toolbar>\n                    <Link to={\"/githubpages\"} style={{color: \"white\"}}>\n                        <MenuBookIcon className={classes.bookIcon}/>\n                    </Link>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        The Bookstore\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <Link to={\"/githubpages\"} style={{textDecoration: \"none\"}}>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{'aria-label': 'search'}}\n                                onChange={handleChange.bind(this)}\n                            />\n                        </Link>\n                    </div>\n                    <div className={classes.grow}/>\n                    <div style={{marginTop: 5}}>\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={props.cartCount} color=\"secondary\">\n                                <Link to={isLoggedIn ? \"/cart\" : \"/login\"}\n                                      style={{color: \"white\", style: \"none\"}}>\n                                    <ShoppingCartIcon/>\n                                </Link>\n                            </Badge>\n                        </IconButton>\n                    </div>\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle/>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            {isLoggedIn ?\n                                <MenuItem disabled={true}><b>Hello {props.user.firstName}!</b></MenuItem> : null\n                            }\n                            <Link to={!isLoggedIn ? \"/login\" : \"/profile\"}\n                                  style={{textDecoration: \"none\", color: \"black\"}}>\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                            </Link>\n                            {isLoggedIn ?\n                                <Link to={\"/my-order\"} style={{textDecoration: \"none\", color: \"black\"}}>\n                                    <MenuItem onClick={handleClose}>My Orders</MenuItem>\n                                </Link>\n                                : null\n                            }\n                            {props.user.role === \"admin\" && isLoggedIn ?\n                                <Link to={\"/admin\"}\n                                      style={{textDecoration: \"none\", color: \"red\"}}>\n                                    <MenuItem onClick={handleClose}>Add Books</MenuItem>\n                                </Link> :\n                                null\n                            }\n                            {localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\" ?\n                                <MenuItem onClick={setTokenInStorage.bind(this)}>Sign Out</MenuItem>\n                                :\n                                <Link to=\"/login\" style={{textDecoration: \"none\", color: \"black\"}}>\n                                    <MenuItem onClick={handleClose}>Sign In</MenuItem>\n                                </Link>\n                            }\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from \"@material-ui/core/Paper\";\nimport Axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 500\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '90%',\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(0),\n    },\n    submit: {\n        margin: theme.spacing(6, 0, 5),\n    },\n}));\n\nexport default function Profile(props) {\n    const [edit, setEdit] = useState(false)\n    const [firstName, setFirstName] = useState(props.user.firstName)\n    const [lastName, setLastName] = useState(props.user.lastName)\n    const classes = useStyles();\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    const handleChange = () => {\n        setEdit(!edit)\n        if (edit)\n            Axios.put(\"http://localhost:8080/user\", {\n                firstName: firstName, lastName: lastName, password: props.user.password, role: props.user.role\n            }, headers).then((response) => {\n                // eslint-disable-next-line no-restricted-globals\n                location.reload()\n            })\n    }\n\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline/>\n                    <Paper className={classes.paper} variant=\"elevation\">\n                        <Typography component=\"h1\" variant=\"h5\">\n                            My Profile\n                        </Typography>\n                        <form className={classes.form}>\n                            <Grid container spacing={5}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"firstName\"\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"firstName\"\n                                        label=\"First Name\"\n                                        autoFocus\n                                        size=\"small\"\n                                        defaultValue={props.user.firstName}\n                                        onChange={(event) => setFirstName(event.target.value)}\n                                        disabled={!edit}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"lastName\"\n                                        label=\"Last Name\"\n                                        name=\"lastName\"\n                                        autoComplete=\"lname\"\n                                        size=\"small\"\n                                        onChange={(event) => setLastName(event.target.value)}\n                                        defaultValue={props.user.lastName}\n                                        disabled={!edit}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        size=\"small\"\n                                        defaultValue={props.user.email}\n                                        disabled={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        name=\"role\"\n                                        label=\"Role\"\n                                        type=\"role\"\n                                        id=\"role\"\n                                        size=\"small\"\n                                        defaultValue={props.user.role}\n                                        disabled={true}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {edit ?\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={handleChange}\n                                >\n                                    SAVE\n                                </Button>\n                                :\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                    onClick={handleChange}\n                                >\n                                    CHANGE\n                                </Button>\n                            }\n                        </form>\n                    </Paper>\n                </Container>\n            }\n        </div>\n    );\n}","import Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardMedia: {\n        paddingTop: '60%',\n        width: '40%',\n        marginTop: 15,\n        marginBottom: 15,\n        marginLeft: '50%',\n        transform: 'translate(-50%)',\n    },\n    mediaContainer: {\n        backgroundColor: '#f2f2f2',\n        boxShadow: 'none',\n        borderRadius: 0,\n        [theme.breakpoints.up('md')]: {\n            minWidth: 150,\n        },\n    },\n    cardContent: {\n        height: 70,\n        flexGrow: 0,\n    },\n    price: {\n        padding: 0,\n        margin: 0,\n        fontWeight: 'bold',\n    },\n    root: {\n        '& > span': {\n            margin: theme.spacing(2),\n        },\n    },\n    input: {\n        padding: 10,\n        margin: 3,\n        maxHeight: 1,\n        width: 20,\n        textAlign: \"center\"\n    },\n    textField: {\n        marginLeft: 5,\n        marginRight: 5\n    },\n    text: {\n        marginLeft: 20\n    }\n}));\n\nexport default function CardData(props) {\n    const classes = useStyles();\n    const [quantity, setQuantity] = React.useState(props.quantity);\n\n    const handleChange = (qua) => {\n        if (qua === 1) {\n            setQuantity(quantity - 1)\n            props.updateQuantity(quantity - 1)\n        } else {\n            setQuantity(quantity + 1)\n            props.updateQuantity(quantity + 1)\n        }\n    }\n\n    let bookTitle;\n    let bookAuthor;\n    let bookPrice;\n    let bookImage;\n    let bookDescription;\n    if (props.book !== undefined) {\n        bookAuthor = props.book.bookAuthor\n        bookTitle = props.book.bookTitle\n        bookPrice = \"Rs. \" + props.book.bookPrice\n        bookImage = props.book.bookImage\n        bookDescription = props.book.bookDescription\n    }\n    return (\n        <div style={{display: props.display}}>\n            <Card className={classes.mediaContainer} style={{background: props.backgroundcolor}}>\n                <CardMedia\n                    className={classes.cardMedia}\n                    image={bookImage}\n                    title={bookDescription}\n                    style={props.style}\n                />\n            </Card>\n            <CardContent className={classes.cardContent}>\n                <Typography variant=\"body2\" component=\"h2\">\n                    {bookTitle}\n                </Typography>\n                <Typography variant={\"caption\"} color=\"textSecondary\" display=\"block\">\n                    {bookAuthor}\n                </Typography>\n                <Typography variant={\"caption\"} className={classes.price}>\n                    {bookPrice}\n                </Typography>\n                {props.page === \"cart\" ?\n                    <div>\n                        <ButtonBase type=\"button\" disabled={quantity < 2 ? true : false} centerRipple\n                                    onClick={() => handleChange(1)}>\n                            <RemoveCircleOutlineIcon color=\"primary\"/>\n                        </ButtonBase>\n                        <TextField\n                            className={classes.textField}\n                            variant=\"outlined\"\n                            disabled={true}\n                            inputProps={{\n                                className: classes.input,\n                            }}\n                            value={props.quantity}\n                        />\n                        <ButtonBase type=\"button\" centerRipple onClick={() => handleChange(2)}>\n                            <AddCircleOutlineIcon color=\"primary\"/>\n                        </ButtonBase>\n                        <Typography\n                            type=\"Button\"\n                            onClick={props.onChange}\n                            className={classes.text}\n                            align=\"left\" display='inline'\n                            style={{cursor: \"pointer\"}}\n                        >\n                            Remove\n                        </Typography>\n                    </div>\n                    : <></>\n                }\n                {props.page === \"summary\" ?\n                    <div>\n                        <br/>\n                        ({props.quantity})\n                    </div>\n                    : <></>\n                }\n            </CardContent>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useFormik} from \"formik\";\nimport Axios from \"axios\";\n\nconst useStyle = makeStyles((theme) => ({\n    layout: {\n        margin: \"50px\",\n        [theme.breakpoints.up('md')]: {\n            margin: \"50px 200px\"\n        }\n    },\n    paper: {\n        borderColor: \"#d9d9d9\",\n        borderRadius: 0,\n        backgroundColor: 'rgba(242, 242, 242,0.09)',\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    heading: {\n        padding: theme.spacing(1, 0, 2),\n    },\n    buttons: {\n        backgroundColor: \"#990033\",\n        color: \"white\",\n        borderRadius: 0,\n        height: 30,\n        [theme.breakpoints.up('md')]: {\n            marginLeft: '80%',\n        },\n        marginBottom: '2%',\n        width: 115,\n        border: \"none\"\n    },\n}));\n\n\nexport default function CustomerDetails(props) {\n    const [edit, setEdit] = useState(false)\n    const [customerId, setCustomerId] = useState()\n    const [update, setUpdate] = useState(false)\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            pinCode: '',\n            locality: '',\n            address: '',\n            landmark: '',\n            city: '',\n            addressType: 'work'\n        },\n        onSubmit: values => {\n            if (update) {\n                Axios.put('http://localhost:8080/customer/' + customerId, formik.values, headers)\n                    .then(response => {\n                        props.onClick()\n                    })\n                setEdit(true)\n            } else {\n                Axios.post('http://localhost:8080/customer', formik.values, headers)\n                    .then(response => {\n                        setCustomerId(response.data.customerId)\n                        props.onClick()\n                        props.setCustomer(response.data)\n                    })\n                setUpdate(true)\n                setEdit(true)\n            }\n        },\n        validate: values => {\n            let error = {}\n            if (values.name.length < 3)\n                error.name = 'name at least have 3 character'\n            if (!/^[0-9]{10}$/i.test(values.phoneNumber))\n                error.phoneNumber = 'Must have 10 digit'\n            if (!/^[0-9]{6}$/i.test(values.pinCode))\n                error.pincode = 'Must have 6 digit'\n            return error\n        }\n    })\n\n    const classes = useStyle();\n\n    function editForm() {\n        setEdit(false)\n    }\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <main className={classes.layout}>\n                <Paper className={classes.paper} variant=\"outlined\" square>\n                    <React.Fragment>\n                        <Typography color=\"inherit\"\n                                    noWrap\n                                    variant=\"h6\"\n                                    gutterBottom\n                                    align=\"left\"\n                        >\n                            Customer Details\n                        </Typography>\n                        <Typography\n                            align=\"right\"\n                            gutterBottom\n                            style={{cursor: \"pointer\"}}\n                            onClick={editForm}\n                        >\n                            {edit ? \"Edit\" : \"\"}\n                        </Typography>\n                        <Grid item xs={12} sm={9}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        type=\"text\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Full Name\"\n                                        fullWidth\n                                        value={formik.values.name}\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                    {formik.errors.name ? <div>{formik.errors.name}</div> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        type=\"number\"\n                                        id=\"phoneNumber\"\n                                        name=\"phoneNumber\"\n                                        label=\"Phone Number\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                    {formik.errors.phoneNumber ? <div>{formik.errors.phoneNumber}</div> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        type=\"number\"\n                                        id=\"pincode\"\n                                        name=\"pinCode\"\n                                        label=\"Pincode\"\n                                        value={formik.values.pinCode}\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                    {formik.errors.pincode ? <div>{formik.errors.pincode}</div> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"locality\"\n                                        name=\"locality\"\n                                        label=\"Locality\"\n                                        value={formik.values.locality}\n                                        fullWidth\n                                        autoComplete=\"locality\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"address\"\n                                        name=\"address\"\n                                        label=\"Address\"\n                                        value={formik.values.address}\n                                        fullWidth\n                                        // multiline\n                                        rows={2}\n                                        autoComplete=\"shipping address\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"city\"\n                                        name=\"city\"\n                                        label=\"City\"\n                                        value={formik.values.city}\n                                        fullWidth\n                                        autoComplete=\"shipping address-city\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        disabled={edit}\n                                        id=\"landmark\"\n                                        name=\"landmark\"\n                                        label=\"Landmark\"\n                                        value={formik.values.landmark}\n                                        fullWidth\n                                        autoComplete=\"address-landmark\"\n                                        variant=\"outlined\"\n                                        onChange={formik.handleChange}\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography align=\"left\">\n                                        Type\n                                    </Typography>\n                                </Grid>\n                                <FormControl component=\"fieldset\">\n                                    <RadioGroup name=\"addressType\" value={formik.values.addressType}\n                                                onChange={formik.handleChange}>\n                                        <div>\n                                            <FormControlLabel disabled={edit} value=\"work\" control={<Radio/>}\n                                                              label=\"Work\"/>\n                                            <FormControlLabel disabled={edit} value=\"home\" control={<Radio/>}\n                                                              label=\"Home\"/>\n                                            <FormControlLabel disabled={edit} value=\"other\" control={<Radio/>}\n                                                              label=\"Other\"/>\n                                        </div>\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        {!edit ?\n                            <button type=\"submit\" className={classes.buttons}>\n                                CONTINUE\n                            </button>\n                            : null\n                        }\n                    </React.Fragment>\n                </Paper>\n            </main>\n        </form>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardData from \"./CardData\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport {Link, Redirect} from \"react-router-dom\";\n\nexport default function Cart(props) {\n    const [cartData, setCartData] = useState()\n    const [bookData, setBookData] = useState()\n    const [trick, setTrick] = useState(true)\n    const [showResults, setShowResults] = React.useState(false)\n    const [showSummary, setShowSummary] = React.useState(false)\n    const [customer, setCustomer] = useState(\"\");\n\n    const style = {\n        padding: 40,\n        height: 125,\n        width: 75,\n    }\n\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/cart\", headers).then((result) => {\n            setCartData(result)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [trick])\n\n    var result = [];\n    var carts = [];\n    if (cartData !== undefined) {\n        for (let i = 0; i < cartData.data.length; i++) {\n            (result.push(cartData.data[i].book.bookId))\n            carts.push(cartData.data[i])\n        }\n    }\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/book/get-books-by-id?ids=\" + result, headers).then((result) => {\n            setBookData(result.data)\n        })\n    }, [cartData])\n\n    const useStyles = makeStyles((theme) => ({\n        cardGrid: {\n            padding: 0,\n            margin: 0,\n        },\n        card: {\n            height: '100%',\n            width: 200,\n            boxShadow: 'none',\n            display: \"flex\"\n        },\n        buttons: {\n            backgroundColor: \"#990033\",\n            color: \"white\",\n            borderRadius: 0,\n            height: 30,\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: '78%',\n            },\n            marginBottom: '5%',\n            width: 115,\n            border: \"none\"\n        },\n        root: {\n            '& > *': {\n                marginTop: theme.spacing(2),\n                position: 'absolute',\n                left: '50%',\n                transform: 'translate(-50%, -50%)'\n            },\n        },\n        title: {\n            marginTop: 15,\n            [theme.breakpoints.up('md')]: {\n                marginLeft: theme.spacing(4.5),\n            },\n        },\n        cart: {\n            border: \"thin solid #d9d9d9\",\n            margin: \"50px\",\n            [theme.breakpoints.up('md')]: {\n                margin: \"50px 200px\"\n            }\n        }\n    }));\n\n    const removeBook = (book) => {\n        console.log(book.bookId)\n        if (book !== undefined) {\n            axios.delete(\"http://localhost:8080/cart/delete-book/\" + book.bookId, headers)\n                .then((results) => {\n                    setTrick(!trick)\n                })\n        }\n    }\n\n    const updateQuantity = (quantity, book) => {\n        axios.put(\"http://localhost:8080/cart/\" + quantity + \"?book_id=\" + JSON.stringify(book.bookId), {}\n            , headers).then((results) => {\n            setTrick(!trick)\n        })\n    }\n\n    const findById = (id) => {\n        for (var i = 0; i < bookData.length; i++) {\n            if (bookData[i].bookId == id)\n                return i;\n        }\n        return 2;\n    }\n\n    const emptyCart = () => {\n        carts.map((cart, i) => (\n            axios.post(\"http://localhost:8080/order\", {\n                book: cart.book, bookQuantity: cart.quantity\n                , totalPrice: (bookData[findById(cart.book.bookId)].bookPrice * cart.quantity),\n                customer: customer\n            }, headers)\n        ))\n        axios.post(\"http://localhost:8080/mail-sender/order-confirm\", carts, headers)\n        axios.delete(\"http://localhost:8080/cart/empty-cart\", headers);\n    }\n\n    const classes = useStyles()\n\n    let sum = 0\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <div>\n                    <div className={classes.cart}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            My Cart({result.length})\n                        </Typography>\n                        {bookData !== undefined ?\n                            carts.map((cart, i) =>\n                                <div key={i} style={{height: \"100%\", width: \"100%\"}}>\n                                    <CardData quantity={cart.quantity} updateQuantity={(event) => {\n                                        updateQuantity(event, cart.book)\n                                    }} book={cart.book} onChange={() => removeBook(cart.book)}\n                                              backgroundcolor=\"none\"\n                                              style={style} display=\"flex\" page=\"cart\"/>\n                                </div>\n                            )\n                            : <h1> Data Not Available </h1>\n                        }\n                        {!showResults && result.length > 0 ?\n                            <button onClick={() => {\n                                setShowResults(true)\n                            }} className={classes.buttons}>\n                                PLACE ORDER\n                            </button>\n                            : null\n                        }\n                    </div>\n                    {showResults ?\n                        <div>\n                            <CustomerDetails setCustomer={(customer) => setCustomer(customer)} onClick={() => {\n                                setShowSummary(true)\n                            }}/>\n                        </div>\n                        :\n                        <div className={classes.cart}>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                Customer Details\n                            </Typography>\n                        </div>\n                    }\n\n                    {showSummary ?\n                        <div className={classes.cart}>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                Order Summary\n                            </Typography>\n                            {bookData !== undefined ?\n                                carts.map((cart, i) =>\n                                    <div key={i} style={{height: \"100%\", width: \"100%\"}}>\n                                        <CardData quantity={cart.quantity} book={bookData[i]}\n                                                  onChange={() => removeBook(cart.bookId)} backgroundcolor=\"none\"\n                                                  style={style} display=\"flex\" page=\"summary\"/>\n                                        <div style={{display: \"none\"}}>\n                                            {sum = sum + cart.quantity * bookData[i].bookPrice}\n                                        </div>\n                                    </div>\n                                )\n                                : <h1> Data Not Available </h1>\n                            }\n                            <div style={{}}>\n                                <Typography variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>\n                                    Total Amount<br/>\n                                    Rs. {sum}\n                                </Typography>\n                            </div>\n                            <Link to={\"/order-confirm\"}>\n                                <button className={classes.buttons} onClick={emptyCart}>CHECKOUT</button>\n                            </Link>\n                        </div>\n                        :\n                        <div className={classes.cart}>\n                            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                                Order Summary\n                            </Typography>\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport CardData from './CardData'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#990033'\n        }\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(12),\n    },\n    card: {\n        height: '100%',\n        boxShadow: 'none',\n        border: \"thin solid #d9d9d9\",\n    },\n    addButton: {\n        width: '100%',\n        border: \"thin solid #d5cccc\",\n        padding: 0,\n        boxShadow: 'none',\n        height: 30,\n        textAlign: 'center',\n        backgroundColor: \"#b3003b\"\n    },\n    wishlistButton: {\n        width: '50%',\n        border: \"thin solid #d5cccc\",\n        padding: 0,\n        boxShadow: 'none',\n        height: 30,\n        textAlign: 'center',\n    },\n    root: {\n        '& > *': {\n            marginTop: theme.spacing(2),\n            transform: 'translate(-50%, -50%)',\n            position: 'relative',\n            marginLeft: '59%',\n            bottom: 60,\n            [theme.breakpoints.down('sm')]: {\n                bottom: 40,\n                marginLeft: '50%',\n            },\n        },\n    },\n    center: {\n        '& > *': {\n            marginTop: theme.spacing(2),\n            transform: 'translate(-50%, -50%)',\n            position: 'relative',\n            marginLeft: '63.5%',\n            bottom: 60,\n            [theme.breakpoints.down('sm')]: {\n                bottom: 40,\n                marginLeft: '56%',\n            },\n        },\n    },\n    title: {\n        marginTop: '3.1%',\n        float: \"left\",\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing(24),\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        marginTop: '2.5%',\n        width: 200,\n        float: \"right\",\n        border: \"1px solid #d9d9d9\",\n        borderBottom: \"none\"\n    },\n}));\n\nexport default function CardGrid(props) {\n    const [bookData, setBookData] = useState();\n    const classes = useStyles();\n    const [cart, setCart] = useState([])\n    const [page, setPage] = React.useState(1);\n    const [error, setError] = useState();\n    const [expired, setExpired] = useState(false);\n    const itemsPerPage = 12;\n    const cards = [];\n    const jwtDecoder = require(\"jsonwebtoken\")\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/book/sorted/default/' + props.search)\n            .then((results) => {\n                setBookData(results.data);\n            }).catch((error) => {\n            if (error.response.status === 404)\n                setError(\"No Books Found!\")\n            if (error.response.status === 403)\n                setExpired(true);\n        });\n        setPage(1);\n    }, [props.search]);\n\n    useEffect(() => {\n        if (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\")\n            axios.get('http://localhost:8080/cart', headers)\n                .then((results) => {\n                    setCart(() => cart.concat(results.data))\n                });\n        setPage(1);\n    }, []);\n\n    const handleChange = (event, value) => {\n        setPage(value);\n    };\n\n    const updateCart = () => {\n        addedToCart = false\n    }\n\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    var addedToCart = true;\n\n    const addBook = (value) => {\n        axios.post('http://localhost:8080/cart', {book: value, quantity: 1}\n            , headers)\n            .then((results) => {\n                setCart(() => cart.concat(results.data))\n            }).catch(error => {\n            if (error.response.status === 403)\n                setExpired(true);\n        });\n    }\n\n    const handleSort = (event) => {\n        axios.get('https://infinite-springs-47602.herokuapp.com/get-all')\n            .then((results\n            ) => {\n                setBookData(results.data);\n            });\n        setPage(1);\n    }\n\n    if (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\" && jwtDecoder.decode(localStorage.getItem('key')).exp < Date.now() / 1000) {\n        localStorage.setItem('key', \"\")\n        // eslint-disable-next-line no-restricted-globals\n        location.reload()\n    }\n\n    if (bookData !== undefined) {\n        var records = (bookData.length)\n        for (let bookId = 1 + itemsPerPage * (page - 1); bookId <= itemsPerPage * page && bookId <= bookData.length\n            ; bookId++) {\n            (cards.push(bookId));\n        }\n    }\n\n    return (\n        <>\n            {expired ?\n                <Redirect to={\"/login\"}/> : null\n            }\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                Books({records} books)\n            </Typography>\n            <FormControl className={classes.formControl}>\n                <Select\n                    defaultValue={\"default\"}\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"select\"\n                    onChange={handleSort}\n                >\n                    <MenuItem value=\"default\"> Sort By : Default</MenuItem>\n                    <MenuItem value=\"increasing\">Price : Low to High</MenuItem>\n                    <MenuItem value=\"decreasing\">Price : High to Low</MenuItem>\n                    <MenuItem value=\"newlyArrived\">Newly Arrived</MenuItem>\n                </Select>\n            </FormControl>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={3}>\n                    {cards.map((card, i) => <Grid item key={card} xs={12} sm={6} md={3}>\n                        {addedToCart = true}\n                        <Card className={classes.card}>\n                            {\n                                cart.map(num => {\n                                    if (JSON.stringify(num.book) === JSON.stringify(bookData[card - 1]))\n                                        updateCart();\n                                })}\n                            <CardData book={bookData[card - 1]}/>\n                            <CardActions>\n                                {addedToCart ?\n                                    <MuiThemeProvider theme={theme}>\n                                        {localStorage.getItem('key') === \"\" ?\n                                            <Button size={\"large\"} variant={\"contained\"} color={\"secondary\"}\n                                                    className={classes\n                                                        .addButton}\n                                                    onClick={addBook.bind(this, bookData[card - 1].bookId)}>\n                                                <Link to=\"/login\" style={{color: \"white\", textDecoration: \"none\"}}>\n                                                    <Typography variant={\"caption\"}>\n                                                        ADD TO CART\n                                                    </Typography>\n                                                </Link>\n                                            </Button>\n                                            :\n                                            <Button size={\"large\"} variant={\"contained\"} color={\"secondary\"}\n                                                    className={classes\n                                                        .addButton}\n                                                    onClick={addBook.bind(this, bookData[card - 1])}>\n                                                <Typography variant={\"caption\"}>\n                                                    ADD TO CART\n                                                </Typography>\n                                            </Button>\n                                        }\n                                    </MuiThemeProvider>\n                                    :\n                                    <button className={classes.addButton}\n                                            style={{width: \"100%\", backgroundColor: \"blue\"}}>\n                                        <Typography variant={\"caption\"} style={{color: \"white\"}}>\n                                            ADDED TO BAG\n                                        </Typography>\n                                    </button>\n                                }\n                            </CardActions>\n                        </Card>\n                    </Grid>)}\n                    <Grid container justify=\"center\">\n                        <Typography component=\"h3\" variant=\"h4\">{error}</Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n            {bookData !== undefined ?\n                <div className={records / itemsPerPage >= 3 ? classes.root : classes.center}>\n                    <Pagination count={Math.ceil(records / itemsPerPage)} color=\"secondary\" page={page}\n                                onChange={handleChange}/>\n                </div>\n                :\n                null\n            }\n        </>\n    )\n}","import React, {useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useFormik} from \"formik\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n    const [login, setLogin] = useState(false)\n    const [register, setRegister] = useState(\" \")\n    const classes = useStyles();\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        onSubmit: values => {\n            Axios.post('http://localhost:8080/authenticate', formik.values)\n                .then(response => {\n                    localStorage.setItem('key', response.data.jwt)\n                    localStorage.setItem('userEmail', formik.values.email)\n                    setLogin(true)\n                    props.login(true)\n                }).catch(error => {\n                if (error.response.data.status === 403)\n                    setRegister(\"Invalid Username Or Password!\");\n            })\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ?\n                <Redirect to={\"/githubpages\"}/> : null\n            }\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Typography component=\"h3\" variant=\"h6\" style={{color: \"#e60000\"}}>\n                    {register}\n                </Typography>\n                <form className={classes.form} onSubmit={formik.handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={formik.values.email}\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={formik.handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formik.values.password}\n                        autoComplete=\"current-password\"\n                        onChange={formik.handleChange}\n                    />\n                    {/*<FormControlLabel*/}\n                    {/*    control={<Checkbox value=\"remember\" color=\"primary\"/>}*/}\n                    {/*    label=\"Remember me\"*/}\n                    {/*/>*/}\n                    {login ?\n                        <Link to={\"/githubpages\"}>\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign In\n\n                            </Button>\n                        </Link>\n                        :\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n\n                        </Button>\n                    }\n                    <Grid container>\n                        <Grid item xs>\n                            <Link to={\"/forgot-password\"} variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to={\"/sign-up\"} variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function LinearIndeterminate() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress/>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from \"@material-ui/core/Paper\";\nimport * as Yup from 'yup'\nimport {useFormik} from \"formik\";\nimport Axios from \"axios\";\nimport LinearIndeterminate from \"./loading\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 500\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '90%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: \"blue\",\n        color: \"white\",\n        \"&:hover\": {\n            backgroundColor: \"blue\"\n        }\n    },\n}));\n\nconst validationSchema = Yup.object().shape({\n    firstName: Yup.string().min(3, \"Minimum 3 characters\"),\n    lastName: Yup.string().min(3, \"Minimum 3 characters\"),\n    email: Yup.string().email(\"Invalid\"),\n    password: Yup.string()\n        .matches(\n            \"^(?=.{4,})(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]*$\",\n            \"Must Contain 4 Characters, at least One Uppercase and One Number\"\n        ),\n    confirmedPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'password must match')\n})\n\nexport default function SignUp() {\n    const [message, setMessage] = useState();\n    const [loading, setLoading] = useState(false)\n\n    const {handleSubmit, handleChange, values, errors} = useFormik({\n        initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\",\n            confirmedPassword: \"\"\n        },\n        validationSchema,\n        onSubmit: values => {\n            setLoading(true)\n            Axios.all([\n                Axios.post(\"http://localhost:8080/user\", values),\n                Axios.post(\"http://localhost:8080/mail-sender/register\", {\n                    name: values.firstName,\n                    email: values.email\n                })\n            ])\n                .then(Axios.spread((registration, email) => {\n                    if (registration.status === 201)\n                        setMessage(\"User Registered Successfully!\")\n                    setLoading(false)\n                }))\n                .catch(error => {\n                    if (error.response.status === 409)\n                        setMessage(\"Email Already Registered!\");\n                    setLoading(false)\n                })\n        }\n    })\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Paper className={classes.paper} variant=\"elevation\">\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                {loading ?\n                    <LinearIndeterminate/>\n                    : null\n                }\n                <Typography component=\"h3\" variant=\"h6\" style={message === 'User Registered Successfully!'\n                    ? {color: \"green\"} : {color: \"#e60000\"}}>\n                    {message}\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.firstName}\n\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.firstName ? errors.firstName : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.lastName}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.lastName ? errors.lastName : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.email}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.email ? errors.email : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.password}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.password ? errors.password : null}\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmedPassword\"\n                                label=\"Confirmed Password\"\n                                type=\"password\"\n                                id=\"confirmedPassword\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.confirmedPassword}\n                            />\n                            <div style={{color: \"red\"}}>\n                                {errors.confirmedPassword ? errors.confirmedPassword : null}\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <h1></h1>{}\n            </Paper>\n        </Container>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport img from \"../images/cracker3.png\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: '100%',\n        maxHeight: '100%',\n        display: 'flex',\n        justify: 'center',\n    },\n    item: {\n        justify: 'centre'\n    },\n    media: {\n        width: 400,\n        height: 300,\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    table: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: \"24%\"\n        }\n    }\n}));\n\nexport default function MediaCard() {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea style={{paddingTop: 20, marginBottom: 30}}>\n                <Grid>\n                    <Typography variant=\"h6\" color=\"inherit\" align={\"center\"}> Your Order Has Been Placed\n                        Successfully!\n                    </Typography>\n                </Grid>\n                <CardMedia\n                    className={classes.media}\n                    image={img}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" align={\"center\"}>\n                        Hurray!!!\n                    </Typography>\n                    <Typography align={\"center\"}>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Your order number is #2001539. We have emailed your order confirmation, and will\n                            send you an update when your order has shipped.\n                        </Typography>\n\n                        <TableContainer>\n                            <Typography align=\"center\" style={{width: 700}} className={classes.table}>\n                                <Table size=\"small\" border={1} style={{flex: \"center\"}}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\">Email us</TableCell>\n                                            <TableCell align=\"center\">Contact</TableCell>\n                                            <TableCell align=\"center\">Address</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <tbody>\n                                    <TableRow>\n                                        <TableCell align=\"center\">abc@bridgelabz.com </TableCell>\n                                        <TableCell align=\"center\">+911234567890</TableCell>\n                                        <TableCell align=\"left\">Malhotra Complex,sector 23,RM marg,mumbai 40001\n                                        </TableCell>\n                                    </TableRow>\n                                    </tbody>\n                                </Table>\n                            </Typography>\n                        </TableContainer>\n                    </Typography>\n                    <br/>\n                    <Typography align={\"center\"}>\n                        <Link to={\"/githubpages\"} style={{textDecoration: \"none\"}}>\n                            <Button style={{marginBottom: 40, backgroundColor: \"#990033\", color: \"white\"}}\n                                    variant=\"contained\" color=\"secondary\" size={\"medium\"}>\n                                Continue Shopping\n                            </Button>\n                        </Link>\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\nimport {useFormik} from \"formik\";\nimport LinearIndeterminate from \"./loading\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Admin() {\n    const classes = useStyles();\n    const [bookAdd, setBookAdd] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const formik = useFormik({\n        initialValues: {\n            bookTitle: '',\n            bookAuthor: '',\n            bookDescription: '',\n            bookQuantity: '',\n            bookPrice: '',\n            bookImage: '',\n        },\n        onSubmit: values => {\n            setLoading(true)\n            Axios.post(\"http://localhost:8080/book\", formik.values, headers).then((response) => {\n                if (response.status === 200) {\n                    setBookAdd(true)\n                    setLoading(false)\n                }\n            })\n        },\n        validate: values => {\n            let error = {}\n            if (values.bookTitle.length < 3)\n                error.bookTitle = 'title at least have 3 character'\n            if (values.bookAuthor.length < 3)\n                error.bookAuthor = 'title at least have 3 character'\n            if (values.bookDescription.length < 3)\n                error.bookDescription = 'title at least have 3 character'\n            if (values.bookQuantity < 1)\n                error.bookQuantity = 'enter no greater than 0'\n            if (values.bookPrice < 0)\n                error.bookPrice = 'enter positive number'\n            return error\n        }\n    })\n\n    const reload = () => {\n        // eslint-disable-next-line no-restricted-globals\n        location.reload()\n    }\n\n    return (\n        <div>\n            {console.log(headers)}\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline/>\n                    <div className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            <b>ADD BOOK</b>\n                        </Typography>\n                        {loading ?\n                            <LinearIndeterminate/>\n                            : null\n                        }\n                        {bookAdd ?\n                            <Typography component=\"h3\" variant=\"h6\" style={{color: \"green\"}}>\n                                <b>Book Added Successfully!</b>\n                            </Typography> : null\n                        }\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        name=\"bookTitle\"\n                                        variant=\"outlined\"\n                                        type=\"text\"\n                                        fullWidth\n                                        id=\"bookTitle\"\n                                        label=\"Book Title\"\n                                        value={formik.values.bookTitle}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookTitle}</error> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"text\"\n                                        id=\"bookAuthor\"\n                                        label=\"Book Author\"\n                                        name=\"bookAuthor\"\n                                        value={formik.values.bookAuthor}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookAuthor && !formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookAuthor}</error> : null}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"text\"\n                                        id=\"bookDescription\"\n                                        label=\"Book Description\"\n                                        name=\"bookDescription\"\n                                        value={formik.values.bookDescription}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookDescription && !formik.errors.bookAuthor\n                                    && !formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookDescription}</error> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"number\"\n                                        name=\"bookQuantity\"\n                                        label=\"Quantity\"\n                                        id=\"bookQuantity\"\n                                        // minimumValue=1\n                                        value={formik.values.bookQuantity}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookQuantity && !formik.errors.bookDescription && !formik.errors.bookAuthor\n                                    && !formik.errors.bookTitle ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookQuantity}</error> : null}\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        required\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"number\"\n                                        name=\"bookPrice\"\n                                        label=\"Price\"\n                                        id=\"bookPrice\"\n                                        value={formik.values.bookPrice}\n                                        onChange={formik.handleChange}\n                                        autoComplete=\"locality\"\n                                    />\n                                    {formik.errors.bookPrice && !formik.errors.bookDescription && !formik.errors.bookAuthor\n                                    && !formik.errors.bookTitle && !formik.errors.bookQuantity ?\n                                        <error style={{color: \"red\"}}>{formik.errors.bookPrice}</error> : null}\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        type=\"url\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        id=\"bookImage\"\n                                        label=\"Book Image Url\"\n                                        name=\"bookImage\"\n                                        value={formik.values.bookImage}\n                                        onChange={formik.handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                    >\n                                        Save\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Button\n                                        type=\"reset\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                        onClick={reload}\n                                    >\n                                        Reset\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Container>\n            }\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useFormik} from \"formik\";\nimport LinearIndeterminate from \"./loading\";\nimport * as Yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid\")\n})\n\nexport default function ForgotPassword(props) {\n    const [login, setLogin] = useState(false)\n    const [mailSent, setMailSent] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState()\n    const classes = useStyles();\n    const {handleSubmit, handleChange, values, errors} = useFormik({\n        initialValues: {\n            email: ''\n        },\n        validationSchema,\n        onSubmit: values => {\n            setLoading(true);\n            Axios.get(\"http://localhost:8080/user?email=\" + values.email)\n                .then((response) => {\n                        Axios.post(\"http://localhost:8080/mail-sender/forget-password\", {\n                            email: values.email,\n                            password: response.data.password,\n                            name: response.data.firstName\n                        }).then((response) => {\n                            props.setForgetPasswordJwt(response.data.jwt);\n                            localStorage.setItem('userEmail', values.email)\n                            localStorage.setItem('key', response.data.jwt)\n                            setLoading(false)\n                            setMailSent(true)\n                            setError()\n                        })\n                    }\n                ).catch(error => {\n                if (error.response.status === 404) {\n                    setError(\"User Not Registered!\")\n                    setLoading(false)\n                    setMailSent(false)\n                }\n            })\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ?\n                <Redirect to={\"/githubpages\"}/> : null\n            }\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                {loading ?\n                    <LinearIndeterminate/>\n                    : null\n                }\n                <Typography component=\"h1\" variant=\"h5\">\n                    Forget Password\n                </Typography>\n                <Typography component=\"h4\" variant=\"h5\" style={{color: \"#e60000\"}}>\n                    {error}\n                </Typography>\n                {mailSent ?\n                    <Typography component=\"h3\" variant=\"h6\" style={{color: \"green\"}}>\n                        Password reset link is sent to your email.\n                    </Typography>\n                    :\n                    null\n                }\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={values.email}\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleChange}\n                    />\n                    <div style={{color: \"red\"}}>\n                        {errors.email ? errors.email : null}\n                    </div>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Reset Password\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React, {useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useFormik} from \"formik\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = Yup.object().shape({\n    password: Yup.string()\n        .matches(\n            \"^(?=.{4,})(?=.*[A-Z])(?=.*[0-9])[A-Za-z0-9]*$\",\n            \"Must Contain 4 Characters, at least One Uppercase and One Number\"\n        ),\n    confirmedPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'password must match')\n})\n\nexport default function ForgotPassword(props) {\n    const [login, setLogin] = useState(false)\n    const [reset, setReset] = useState()\n    const classes = useStyles();\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n    const {handleSubmit, handleChange, values, errors} = useFormik({\n        initialValues: {\n            email: ''\n        },\n        validationSchema,\n        onSubmit: values => {\n            Axios.put(\"http://localhost:8080/user\", {\n                email: props.user.email, password: values.password\n                , firstName: props.user.firstName, lastName: props.user.lastName\n            }, headers).then((response => {\n                if (response.status === 200)\n                    setReset(\"Password Changed Successfully!\")\n            }))\n        }\n    })\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {login ?\n                <Redirect to={\"/login\"}/> : null\n            }\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    New Password\n                </Typography>\n                {reset !== undefined ?\n                    (\n                        setTimeout(() => {\n                                setLogin(true)\n                            },\n                            1000),\n                            <Typography component=\"h3\" variant=\"h6\" style={{color: \"green\"}}>\n                                {reset}\n                            </Typography>\n                    )\n                    :\n                    null\n                }\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                    {console.log(\"helo\")}\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.password}\n                            />\n                            {errors.password ? errors.password : null}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmedPassword\"\n                                label=\"Confirm Password\"\n                                type=\"password\"\n                                id=\"confirmedPassword\"\n                                autoComplete=\"current-password\"\n                                size=\"small\"\n                                onChange={handleChange}\n                                value={values.confirmedPassword}\n                            />\n                            {errors.confirmedPassword ? errors.confirmedPassword : null}\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Reset Password\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport img from \"../images/cracker3.png\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 15\n    },\n    paper: {\n        padding: theme.spacing(3),\n        margin: 'auto',\n        maxWidth: 700\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        width: 100,\n        height: 128,\n    },\n}));\n\nexport default function OrderDetails(props) {\n    const classes = useStyles();\n    let title;\n    let author;\n    let image;\n    if (props.book !== undefined) {\n        title = props.book.bookTitle;\n        image = props.book.bookImage;\n        author = props.book.bookAuthor\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper} variant=\"outlined\">\n                <div>\n                    <Grid container spacing={3}>\n                        <Grid item>\n                            <img className={classes.img} alt=\"complex\" src={image}/>\n                        </Grid>\n                        <Grid item xs={12} sm container>\n                            <Grid item xs container direction=\"column\" spacing={4}>\n                                <Grid item xs>\n                                    <Typography gutterBottom variant=\"subtitle1\" align=\"justify\">\n                                        {title}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" align=\"left\">\n                                        By {author}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\" align=\"left\">\n                                        ({props.quantity})\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid>\n                                <Typography gutterBottom variant=\"subtitle1\" align=\"left\">\n                                    <b>\n                                        Rs. {props.price}\n                                    </b>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Paper>\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Axios from \"axios\";\nimport Button from \"@material-ui/core/Button\"\nimport OrderDetails from \"./OrderDetails\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 15\n    },\n    paper: {\n        padding: theme.spacing(3),\n        margin: 'auto',\n        maxWidth: 700\n    },\n    title: {\n        marginTop: 15,\n        [theme.breakpoints.up('md')]: {\n            marginLeft: theme.spacing(4.5),\n        },\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        width: 100,\n        height: 128,\n    },\n\n}));\n\nexport default function MyOrder(props) {\n    const classes = useStyles();\n    const [orderDetails, setOrderDetails] = useState();\n    const [books, setBooks] = useState()\n\n    const headers = {\n        headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('key')\n        }\n    }\n\n    useEffect(() => {\n        if (localStorage.getItem('key') !== null && localStorage.getItem('key') !== undefined && localStorage.getItem('key') !== \"\")\n            Axios.get('http://localhost:8080/order', headers)\n                .then((response) => {\n                    setOrderDetails(response)\n                })\n    }, []);\n\n    let bookId = []\n    let orderData = []\n    if (orderDetails !== undefined) {\n        for (let i = 0; i < orderDetails.data.length; i++) {\n            (bookId.push(orderDetails.data[i].book.bookId))\n            orderData.push(orderDetails.data[i])\n        }\n    }\n\n    const findById = (id) => {\n        for (var i = 0; i < books.length; i++) {\n            if (books[i].bookId == id)\n                return i;\n        }\n        return 2;\n    }\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:8080/book/get-books-by-id?ids=\" + bookId, headers).then((result) => {\n            setBooks(result.data)\n        })\n    }, [orderDetails]);\n\n    return (\n        <div>\n            {localStorage.getItem('key') === \"\" ?\n                <Redirect to={\"/login\"}/>\n                :\n                <div>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        My Orders({bookId.length} items)\n                    </Typography>\n                    <Grid style={{marginBottom: 100}}>\n                        {orderData.length !== 0 && books !== undefined ?\n                            orderData.reverse().map((data, i) =>\n                                <div key={i}>\n                                    <OrderDetails book={books[findById(bookId[orderData.length - i - 1])]}\n                                                  price={data.totalPrice}\n                                                  quantity={data.bookQuantity}/>\n                                </div>\n                            )\n                            :\n                            <div>\n                                <br/>\n                                <Link to={\"/githubpages\"} style={{textDecoration: \"none\"}}>\n                                    <Button\n                                        variant=\"contained\"\n                                        style={{backgroundColor: \"#990033\", color: \"white\", marginLeft: 30}}\n                                    >\n                                        SHOP NOW\n                                    </Button>\n                                </Link>\n                            </div>\n                        }\n                    </Grid>\n                </div>\n            }\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport PrimarySearchAppBar from './component/AppBar';\nimport Profile from \"./component/Profile\";\nimport Cart from './component/Cart'\nimport CardGrid from './component/CardGrid'\nimport Login from './component/Login'\nimport SignUp from './component/SignUp'\nimport CustomerDetails from './component/CustomerDetails'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport OrderConfirm from \"./component/OrderConfirm\";\nimport Axios from \"axios\";\nimport Admin from \"./component/Admin\";\nimport ForgotPassword from \"./component/ForgotPassword\";\nimport ResetPassword from \"./component/ResetPassword\";\nimport MyOrder from \"./component/MyOrder\";\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        backgroundColor: \"#990033\",\n        padding: theme.spacing(1),\n        position: \"fixed\",\n        maxHeight: 40,\n        bottom: 0,\n        width: '100%',\n        height: 60, /* Height of the footer */\n        background: '#6cf',\n    },\n}));\n\nexport default function () {\n    const [cartCount] = useState(0)\n    const [search, setSearch] = useState(\"\")\n    const [login, setLogin] = useState(\"\")\n    const [user, setUser] = useState(\"\")\n    const [jwt, setJwt] = useState(\"\")\n    const classes = useStyles();\n    const jwtDecoder = require(\"jsonwebtoken\")\n\n    useEffect(() => {\n        if (localStorage.getItem('key') !== \"\" && localStorage.getItem('key') !== undefined && localStorage.getItem('key') != null) {\n            console.log(localStorage.getItem('key'))\n            console.log(jwtDecoder.decode(localStorage.getItem('key')))\n            Axios.get(\"http://localhost:8080/user?email=\" + jwtDecoder.decode(localStorage.getItem('key')).sub)\n                .then((response) => {\n                        console.log(\"loaded user\")\n                        setUser(response.data)\n                    }\n                )\n        }\n        setJwt(localStorage.getItem('jwt'))\n    }, [login])\n\n    return (\n        <React.Fragment>\n            <CssBaseline/>\n            <Router>\n                <PrimarySearchAppBar user={user} login={login} cartCount={cartCount}\n                                     setSearch={(value) => setSearch(value)}/>\n                <main>\n                    <Switch>\n                        <Route path=\"/githubpages\" exact\n                               component={() => (<CardGrid search={search}/>)}/>\n                        <Route path=\"/sign-up\" exact\n                               component={() => (<SignUp/>)}/>\n                        <Route path=\"/my-order\" exact\n                               component={() => (<MyOrder/>)}/>\n                        <Route path=\"/forgot-password\" exact\n                               component={() => (<ForgotPassword\n                                   setForgetPasswordJwt={(jwt) => localStorage.setItem('jwt', \"/reset-password/\" + jwt)}/>)}/>\n                        <Route path=\"/admin\" exact\n                               component={() => (<Admin/>)}/>\n                        <Route path=\"/profile\" exact\n                               component={() => (<Profile user={user}/>)}/>\n                        <Route path=\"/login\" exact\n                               component={() => (<Login login={(login) => setLogin(login)}/>)}/>\n                        <Route path=\"/cart\" exact\n                               component={() => (<Cart cartCount={cartCount}/>)}/>\n                        <Route path=\"/customer\" exact\n                               component={() => (<CustomerDetails/>)}/>\n                        <Route path=\"/order-confirm\" exact\n                               component={() => (<OrderConfirm/>)}/>\n                        <Route path={jwt} exact\n                               component={() => (<ResetPassword user={user}/>)}/>\n                    </Switch>\n                </main>\n            </Router>\n            <footer className={classes.footer}>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    {new Date().getFullYear()} Copyright: <a href=\"https://www.bookstore.com\"> TheBookStore.com </a>\n                </Typography>\n            </footer>\n        </React.Fragment>\n    );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}